// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tv.proto

#include "tv.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_tv_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tv_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_OrderItem;
}  // namespace protobuf_tv_2eproto
namespace szfiu {
class StockDefineDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StockDefine>
      _instance;
} _StockDefine_default_instance_;
class SystemEventDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SystemEvent>
      _instance;
} _SystemEvent_default_instance_;
class CrossTradeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CrossTrade>
      _instance;
} _CrossTrade_default_instance_;
class OrderItemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OrderItem>
      _instance;
} _OrderItem_default_instance_;
class OrderListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OrderList>
      _instance;
} _OrderList_default_instance_;
class LevelListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LevelList>
      _instance;
} _LevelList_default_instance_;
class OrderImbalanceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OrderImbalance>
      _instance;
} _OrderImbalance_default_instance_;
class MoneyFlowDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MoneyFlow>
      _instance;
} _MoneyFlow_default_instance_;
class AddOrderDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AddOrder>
      _instance;
} _AddOrder_default_instance_;
class OrderExeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OrderExe>
      _instance;
} _OrderExe_default_instance_;
class OrderCancelDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OrderCancel>
      _instance;
} _OrderCancel_default_instance_;
class OrderDeleteDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OrderDelete>
      _instance;
} _OrderDelete_default_instance_;
class OrderReplaceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OrderReplace>
      _instance;
} _OrderReplace_default_instance_;
}  // namespace szfiu
namespace protobuf_tv_2eproto {
static void InitDefaultsStockDefine() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::szfiu::_StockDefine_default_instance_;
    new (ptr) ::szfiu::StockDefine();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::szfiu::StockDefine::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_StockDefine =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsStockDefine}, {}};

static void InitDefaultsSystemEvent() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::szfiu::_SystemEvent_default_instance_;
    new (ptr) ::szfiu::SystemEvent();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::szfiu::SystemEvent::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SystemEvent =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSystemEvent}, {}};

static void InitDefaultsCrossTrade() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::szfiu::_CrossTrade_default_instance_;
    new (ptr) ::szfiu::CrossTrade();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::szfiu::CrossTrade::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CrossTrade =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCrossTrade}, {}};

static void InitDefaultsOrderItem() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::szfiu::_OrderItem_default_instance_;
    new (ptr) ::szfiu::OrderItem();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::szfiu::OrderItem::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_OrderItem =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsOrderItem}, {}};

static void InitDefaultsOrderList() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::szfiu::_OrderList_default_instance_;
    new (ptr) ::szfiu::OrderList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::szfiu::OrderList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_OrderList =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsOrderList}, {
      &protobuf_tv_2eproto::scc_info_OrderItem.base,}};

static void InitDefaultsLevelList() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::szfiu::_LevelList_default_instance_;
    new (ptr) ::szfiu::LevelList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::szfiu::LevelList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_LevelList =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsLevelList}, {
      &protobuf_tv_2eproto::scc_info_OrderItem.base,}};

static void InitDefaultsOrderImbalance() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::szfiu::_OrderImbalance_default_instance_;
    new (ptr) ::szfiu::OrderImbalance();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::szfiu::OrderImbalance::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_OrderImbalance =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsOrderImbalance}, {}};

static void InitDefaultsMoneyFlow() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::szfiu::_MoneyFlow_default_instance_;
    new (ptr) ::szfiu::MoneyFlow();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::szfiu::MoneyFlow::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MoneyFlow =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMoneyFlow}, {}};

static void InitDefaultsAddOrder() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::szfiu::_AddOrder_default_instance_;
    new (ptr) ::szfiu::AddOrder();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::szfiu::AddOrder::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AddOrder =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAddOrder}, {}};

static void InitDefaultsOrderExe() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::szfiu::_OrderExe_default_instance_;
    new (ptr) ::szfiu::OrderExe();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::szfiu::OrderExe::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_OrderExe =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsOrderExe}, {}};

static void InitDefaultsOrderCancel() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::szfiu::_OrderCancel_default_instance_;
    new (ptr) ::szfiu::OrderCancel();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::szfiu::OrderCancel::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_OrderCancel =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsOrderCancel}, {}};

static void InitDefaultsOrderDelete() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::szfiu::_OrderDelete_default_instance_;
    new (ptr) ::szfiu::OrderDelete();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::szfiu::OrderDelete::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_OrderDelete =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsOrderDelete}, {}};

static void InitDefaultsOrderReplace() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::szfiu::_OrderReplace_default_instance_;
    new (ptr) ::szfiu::OrderReplace();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::szfiu::OrderReplace::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_OrderReplace =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsOrderReplace}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_StockDefine.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SystemEvent.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CrossTrade.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OrderItem.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OrderList.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LevelList.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OrderImbalance.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MoneyFlow.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AddOrder.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OrderExe.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OrderCancel.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OrderDelete.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OrderReplace.base);
}

::google::protobuf::Metadata file_level_metadata[13];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::szfiu::StockDefine, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::szfiu::StockDefine, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::szfiu::StockDefine, symbol_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::szfiu::StockDefine, market_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::szfiu::StockDefine, time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::szfiu::StockDefine, financial_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::szfiu::StockDefine, roundlotsize_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::szfiu::StockDefine, roundlotonly_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::szfiu::StockDefine, classification_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::szfiu::StockDefine, subtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::szfiu::StockDefine, authenticity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::szfiu::StockDefine, shortsale_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::szfiu::StockDefine, ipo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::szfiu::StockDefine, luld_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::szfiu::StockDefine, etp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::szfiu::StockDefine, etplevel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::szfiu::StockDefine, inverse_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::szfiu::SystemEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::szfiu::SystemEvent, event_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::szfiu::SystemEvent, time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::szfiu::CrossTrade, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::szfiu::CrossTrade, symbol_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::szfiu::CrossTrade, time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::szfiu::CrossTrade, price_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::szfiu::CrossTrade, shares_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::szfiu::CrossTrade, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::szfiu::CrossTrade, code_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::szfiu::OrderItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::szfiu::OrderItem, price_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::szfiu::OrderItem, qty_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::szfiu::OrderItem, mpid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::szfiu::OrderList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::szfiu::OrderList, symbol_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::szfiu::OrderList, time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::szfiu::OrderList, bidlist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::szfiu::OrderList, asklist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::szfiu::OrderList, code_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::szfiu::LevelList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::szfiu::LevelList, symbol_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::szfiu::LevelList, time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::szfiu::LevelList, bidlist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::szfiu::LevelList, asklist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::szfiu::LevelList, code_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::szfiu::OrderImbalance, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::szfiu::OrderImbalance, symbol_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::szfiu::OrderImbalance, time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::szfiu::OrderImbalance, paried_shares_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::szfiu::OrderImbalance, imbalance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::szfiu::OrderImbalance, dir_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::szfiu::OrderImbalance, far_price_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::szfiu::OrderImbalance, near_price_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::szfiu::OrderImbalance, ref_price_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::szfiu::OrderImbalance, cross_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::szfiu::OrderImbalance, varitation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::szfiu::OrderImbalance, code_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::szfiu::MoneyFlow, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::szfiu::MoneyFlow, symbol_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::szfiu::MoneyFlow, time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::szfiu::MoneyFlow, price_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::szfiu::MoneyFlow, qty_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::szfiu::MoneyFlow, dir_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::szfiu::AddOrder, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::szfiu::AddOrder, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::szfiu::AddOrder, time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::szfiu::AddOrder, orderid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::szfiu::AddOrder, side_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::szfiu::AddOrder, price_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::szfiu::AddOrder, shares_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::szfiu::AddOrder, attr_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::szfiu::OrderExe, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::szfiu::OrderExe, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::szfiu::OrderExe, time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::szfiu::OrderExe, orderid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::szfiu::OrderExe, shares_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::szfiu::OrderExe, match_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::szfiu::OrderExe, print_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::szfiu::OrderExe, price_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::szfiu::OrderCancel, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::szfiu::OrderCancel, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::szfiu::OrderCancel, time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::szfiu::OrderCancel, orderid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::szfiu::OrderCancel, shares_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::szfiu::OrderDelete, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::szfiu::OrderDelete, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::szfiu::OrderDelete, time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::szfiu::OrderDelete, orderid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::szfiu::OrderReplace, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::szfiu::OrderReplace, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::szfiu::OrderReplace, time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::szfiu::OrderReplace, orderid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::szfiu::OrderReplace, newid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::szfiu::OrderReplace, shares_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::szfiu::OrderReplace, price_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::szfiu::StockDefine)},
  { 21, -1, sizeof(::szfiu::SystemEvent)},
  { 28, -1, sizeof(::szfiu::CrossTrade)},
  { 39, -1, sizeof(::szfiu::OrderItem)},
  { 47, -1, sizeof(::szfiu::OrderList)},
  { 57, -1, sizeof(::szfiu::LevelList)},
  { 67, -1, sizeof(::szfiu::OrderImbalance)},
  { 83, -1, sizeof(::szfiu::MoneyFlow)},
  { 93, -1, sizeof(::szfiu::AddOrder)},
  { 105, -1, sizeof(::szfiu::OrderExe)},
  { 117, -1, sizeof(::szfiu::OrderCancel)},
  { 126, -1, sizeof(::szfiu::OrderDelete)},
  { 134, -1, sizeof(::szfiu::OrderReplace)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::szfiu::_StockDefine_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::szfiu::_SystemEvent_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::szfiu::_CrossTrade_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::szfiu::_OrderItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::szfiu::_OrderList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::szfiu::_LevelList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::szfiu::_OrderImbalance_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::szfiu::_MoneyFlow_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::szfiu::_AddOrder_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::szfiu::_OrderExe_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::szfiu::_OrderCancel_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::szfiu::_OrderDelete_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::szfiu::_OrderReplace_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "tv.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 13);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\010tv.proto\022\005szfiu\"\245\002\n\013StockDefine\022\014\n\004cod"
      "e\030\001 \001(\003\022\016\n\006symbol\030\002 \001(\t\022\016\n\006market\030\003 \001(\t\022"
      "\014\n\004time\030\004 \001(\022\022\021\n\tfinancial\030\005 \001(\t\022\024\n\014roun"
      "dlotsize\030\006 \001(\005\022\024\n\014roundlotonly\030\007 \001(\t\022\026\n\016"
      "classification\030\010 \001(\t\022\017\n\007subtype\030\t \001(\t\022\024\n"
      "\014authenticity\030\n \001(\t\022\021\n\tshortsale\030\013 \001(\t\022\013"
      "\n\003ipo\030\014 \001(\t\022\014\n\004luld\030\r \001(\t\022\013\n\003etp\030\016 \001(\t\022\020"
      "\n\010etplevel\030\017 \001(\005\022\017\n\007inverse\030\020 \001(\t\"*\n\013Sys"
      "temEvent\022\r\n\005event\030\001 \001(\005\022\014\n\004time\030\002 \001(\022\"e\n"
      "\nCrossTrade\022\016\n\006symbol\030\001 \001(\t\022\014\n\004time\030\002 \001("
      "\022\022\r\n\005price\030\003 \001(\003\022\016\n\006shares\030\004 \001(\003\022\014\n\004type"
      "\030\005 \001(\005\022\014\n\004code\030\006 \001(\003\"5\n\tOrderItem\022\r\n\005pri"
      "ce\030\001 \001(\003\022\013\n\003qty\030\002 \001(\005\022\014\n\004mpid\030\003 \001(\t\"}\n\tO"
      "rderList\022\016\n\006symbol\030\001 \001(\t\022\014\n\004time\030\002 \001(\022\022!"
      "\n\007bidlist\030\003 \003(\0132\020.szfiu.OrderItem\022!\n\007ask"
      "list\030\004 \003(\0132\020.szfiu.OrderItem\022\014\n\004code\030\005 \001"
      "(\003\"}\n\tLevelList\022\016\n\006symbol\030\001 \001(\t\022\014\n\004time\030"
      "\002 \001(\022\022!\n\007bidlist\030\003 \003(\0132\020.szfiu.OrderItem"
      "\022!\n\007asklist\030\004 \003(\0132\020.szfiu.OrderItem\022\014\n\004c"
      "ode\030\005 \001(\003\"\325\001\n\016OrderImbalance\022\016\n\006symbol\030\001"
      " \001(\t\022\014\n\004time\030\002 \001(\022\022\025\n\rparied_shares\030\003 \001("
      "\003\022\021\n\timbalance\030\004 \001(\003\022\013\n\003dir\030\005 \001(\t\022\021\n\tfar"
      "_price\030\006 \001(\005\022\022\n\nnear_price\030\007 \001(\005\022\021\n\tref_"
      "price\030\010 \001(\005\022\022\n\ncross_type\030\t \001(\t\022\022\n\nvarit"
      "ation\030\n \001(\t\022\014\n\004code\030\013 \001(\003\"R\n\tMoneyFlow\022\016"
      "\n\006symbol\030\001 \001(\t\022\014\n\004time\030\002 \001(\022\022\r\n\005price\030\003 "
      "\001(\003\022\013\n\003qty\030\004 \001(\003\022\013\n\003dir\030\005 \001(\t\"r\n\010AddOrde"
      "r\022\014\n\004code\030\001 \001(\005\022\014\n\004time\030\002 \001(\022\022\017\n\007orderid"
      "\030\003 \001(\003\022\014\n\004side\030\004 \001(\005\022\r\n\005price\030\005 \001(\005\022\016\n\006s"
      "hares\030\006 \001(\005\022\014\n\004attr\030\007 \001(\t\"x\n\010OrderExe\022\014\n"
      "\004code\030\001 \001(\005\022\014\n\004time\030\002 \001(\022\022\017\n\007orderid\030\003 \001"
      "(\003\022\016\n\006shares\030\004 \001(\005\022\021\n\tmatch_num\030\005 \001(\003\022\r\n"
      "\005print\030\006 \001(\005\022\r\n\005price\030\007 \001(\005\"J\n\013OrderCanc"
      "el\022\014\n\004code\030\001 \001(\005\022\014\n\004time\030\002 \001(\022\022\017\n\007orderi"
      "d\030\003 \001(\003\022\016\n\006shares\030\004 \001(\005\":\n\013OrderDelete\022\014"
      "\n\004code\030\001 \001(\005\022\014\n\004time\030\002 \001(\022\022\017\n\007orderid\030\003 "
      "\001(\003\"i\n\014OrderReplace\022\014\n\004code\030\001 \001(\005\022\014\n\004tim"
      "e\030\002 \001(\022\022\017\n\007orderid\030\003 \001(\003\022\r\n\005newid\030\004 \001(\003\022"
      "\016\n\006shares\030\005 \001(\005\022\r\n\005price\030\006 \001(\005b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1558);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "tv.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_tv_2eproto
namespace szfiu {

// ===================================================================

void StockDefine::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StockDefine::kCodeFieldNumber;
const int StockDefine::kSymbolFieldNumber;
const int StockDefine::kMarketFieldNumber;
const int StockDefine::kTimeFieldNumber;
const int StockDefine::kFinancialFieldNumber;
const int StockDefine::kRoundlotsizeFieldNumber;
const int StockDefine::kRoundlotonlyFieldNumber;
const int StockDefine::kClassificationFieldNumber;
const int StockDefine::kSubtypeFieldNumber;
const int StockDefine::kAuthenticityFieldNumber;
const int StockDefine::kShortsaleFieldNumber;
const int StockDefine::kIpoFieldNumber;
const int StockDefine::kLuldFieldNumber;
const int StockDefine::kEtpFieldNumber;
const int StockDefine::kEtplevelFieldNumber;
const int StockDefine::kInverseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StockDefine::StockDefine()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tv_2eproto::scc_info_StockDefine.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:szfiu.StockDefine)
}
StockDefine::StockDefine(const StockDefine& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  symbol_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.symbol().size() > 0) {
    symbol_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.symbol_);
  }
  market_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.market().size() > 0) {
    market_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.market_);
  }
  financial_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.financial().size() > 0) {
    financial_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.financial_);
  }
  roundlotonly_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.roundlotonly().size() > 0) {
    roundlotonly_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.roundlotonly_);
  }
  classification_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.classification().size() > 0) {
    classification_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.classification_);
  }
  subtype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.subtype().size() > 0) {
    subtype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.subtype_);
  }
  authenticity_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.authenticity().size() > 0) {
    authenticity_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.authenticity_);
  }
  shortsale_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.shortsale().size() > 0) {
    shortsale_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.shortsale_);
  }
  ipo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ipo().size() > 0) {
    ipo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ipo_);
  }
  luld_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.luld().size() > 0) {
    luld_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.luld_);
  }
  etp_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.etp().size() > 0) {
    etp_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.etp_);
  }
  inverse_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.inverse().size() > 0) {
    inverse_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.inverse_);
  }
  ::memcpy(&code_, &from.code_,
    static_cast<size_t>(reinterpret_cast<char*>(&etplevel_) -
    reinterpret_cast<char*>(&code_)) + sizeof(etplevel_));
  // @@protoc_insertion_point(copy_constructor:szfiu.StockDefine)
}

void StockDefine::SharedCtor() {
  symbol_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  market_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  financial_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  roundlotonly_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  classification_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  subtype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  authenticity_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  shortsale_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ipo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  luld_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  etp_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  inverse_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&code_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&etplevel_) -
      reinterpret_cast<char*>(&code_)) + sizeof(etplevel_));
}

StockDefine::~StockDefine() {
  // @@protoc_insertion_point(destructor:szfiu.StockDefine)
  SharedDtor();
}

void StockDefine::SharedDtor() {
  symbol_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  market_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  financial_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  roundlotonly_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  classification_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  subtype_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  authenticity_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  shortsale_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ipo_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  luld_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  etp_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  inverse_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void StockDefine::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* StockDefine::descriptor() {
  ::protobuf_tv_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tv_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StockDefine& StockDefine::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tv_2eproto::scc_info_StockDefine.base);
  return *internal_default_instance();
}


void StockDefine::Clear() {
// @@protoc_insertion_point(message_clear_start:szfiu.StockDefine)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  symbol_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  market_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  financial_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  roundlotonly_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  classification_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  subtype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  authenticity_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  shortsale_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ipo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  luld_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  etp_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  inverse_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&code_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&etplevel_) -
      reinterpret_cast<char*>(&code_)) + sizeof(etplevel_));
  _internal_metadata_.Clear();
}

bool StockDefine::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:szfiu.StockDefine)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string symbol = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_symbol()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->symbol().data(), static_cast<int>(this->symbol().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "szfiu.StockDefine.symbol"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string market = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_market()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->market().data(), static_cast<int>(this->market().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "szfiu.StockDefine.market"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint64 time = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string financial = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_financial()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->financial().data(), static_cast<int>(this->financial().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "szfiu.StockDefine.financial"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 roundlotsize = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &roundlotsize_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string roundlotonly = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_roundlotonly()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->roundlotonly().data(), static_cast<int>(this->roundlotonly().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "szfiu.StockDefine.roundlotonly"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string classification = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_classification()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->classification().data(), static_cast<int>(this->classification().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "szfiu.StockDefine.classification"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string subtype = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_subtype()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->subtype().data(), static_cast<int>(this->subtype().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "szfiu.StockDefine.subtype"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string authenticity = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_authenticity()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->authenticity().data(), static_cast<int>(this->authenticity().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "szfiu.StockDefine.authenticity"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string shortsale = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_shortsale()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->shortsale().data(), static_cast<int>(this->shortsale().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "szfiu.StockDefine.shortsale"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ipo = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ipo()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ipo().data(), static_cast<int>(this->ipo().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "szfiu.StockDefine.ipo"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string luld = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_luld()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->luld().data(), static_cast<int>(this->luld().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "szfiu.StockDefine.luld"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string etp = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_etp()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->etp().data(), static_cast<int>(this->etp().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "szfiu.StockDefine.etp"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 etplevel = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &etplevel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string inverse = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_inverse()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->inverse().data(), static_cast<int>(this->inverse().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "szfiu.StockDefine.inverse"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:szfiu.StockDefine)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:szfiu.StockDefine)
  return false;
#undef DO_
}

void StockDefine::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:szfiu.StockDefine)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 code = 1;
  if (this->code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->code(), output);
  }

  // string symbol = 2;
  if (this->symbol().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->symbol().data(), static_cast<int>(this->symbol().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "szfiu.StockDefine.symbol");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->symbol(), output);
  }

  // string market = 3;
  if (this->market().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->market().data(), static_cast<int>(this->market().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "szfiu.StockDefine.market");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->market(), output);
  }

  // sint64 time = 4;
  if (this->time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(4, this->time(), output);
  }

  // string financial = 5;
  if (this->financial().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->financial().data(), static_cast<int>(this->financial().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "szfiu.StockDefine.financial");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->financial(), output);
  }

  // int32 roundlotsize = 6;
  if (this->roundlotsize() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->roundlotsize(), output);
  }

  // string roundlotonly = 7;
  if (this->roundlotonly().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->roundlotonly().data(), static_cast<int>(this->roundlotonly().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "szfiu.StockDefine.roundlotonly");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->roundlotonly(), output);
  }

  // string classification = 8;
  if (this->classification().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->classification().data(), static_cast<int>(this->classification().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "szfiu.StockDefine.classification");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->classification(), output);
  }

  // string subtype = 9;
  if (this->subtype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->subtype().data(), static_cast<int>(this->subtype().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "szfiu.StockDefine.subtype");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->subtype(), output);
  }

  // string authenticity = 10;
  if (this->authenticity().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->authenticity().data(), static_cast<int>(this->authenticity().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "szfiu.StockDefine.authenticity");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->authenticity(), output);
  }

  // string shortsale = 11;
  if (this->shortsale().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->shortsale().data(), static_cast<int>(this->shortsale().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "szfiu.StockDefine.shortsale");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->shortsale(), output);
  }

  // string ipo = 12;
  if (this->ipo().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ipo().data(), static_cast<int>(this->ipo().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "szfiu.StockDefine.ipo");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->ipo(), output);
  }

  // string luld = 13;
  if (this->luld().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->luld().data(), static_cast<int>(this->luld().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "szfiu.StockDefine.luld");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->luld(), output);
  }

  // string etp = 14;
  if (this->etp().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->etp().data(), static_cast<int>(this->etp().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "szfiu.StockDefine.etp");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->etp(), output);
  }

  // int32 etplevel = 15;
  if (this->etplevel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->etplevel(), output);
  }

  // string inverse = 16;
  if (this->inverse().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->inverse().data(), static_cast<int>(this->inverse().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "szfiu.StockDefine.inverse");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      16, this->inverse(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:szfiu.StockDefine)
}

::google::protobuf::uint8* StockDefine::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:szfiu.StockDefine)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 code = 1;
  if (this->code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->code(), target);
  }

  // string symbol = 2;
  if (this->symbol().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->symbol().data(), static_cast<int>(this->symbol().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "szfiu.StockDefine.symbol");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->symbol(), target);
  }

  // string market = 3;
  if (this->market().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->market().data(), static_cast<int>(this->market().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "szfiu.StockDefine.market");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->market(), target);
  }

  // sint64 time = 4;
  if (this->time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(4, this->time(), target);
  }

  // string financial = 5;
  if (this->financial().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->financial().data(), static_cast<int>(this->financial().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "szfiu.StockDefine.financial");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->financial(), target);
  }

  // int32 roundlotsize = 6;
  if (this->roundlotsize() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->roundlotsize(), target);
  }

  // string roundlotonly = 7;
  if (this->roundlotonly().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->roundlotonly().data(), static_cast<int>(this->roundlotonly().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "szfiu.StockDefine.roundlotonly");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->roundlotonly(), target);
  }

  // string classification = 8;
  if (this->classification().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->classification().data(), static_cast<int>(this->classification().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "szfiu.StockDefine.classification");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->classification(), target);
  }

  // string subtype = 9;
  if (this->subtype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->subtype().data(), static_cast<int>(this->subtype().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "szfiu.StockDefine.subtype");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->subtype(), target);
  }

  // string authenticity = 10;
  if (this->authenticity().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->authenticity().data(), static_cast<int>(this->authenticity().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "szfiu.StockDefine.authenticity");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->authenticity(), target);
  }

  // string shortsale = 11;
  if (this->shortsale().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->shortsale().data(), static_cast<int>(this->shortsale().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "szfiu.StockDefine.shortsale");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->shortsale(), target);
  }

  // string ipo = 12;
  if (this->ipo().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ipo().data(), static_cast<int>(this->ipo().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "szfiu.StockDefine.ipo");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->ipo(), target);
  }

  // string luld = 13;
  if (this->luld().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->luld().data(), static_cast<int>(this->luld().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "szfiu.StockDefine.luld");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->luld(), target);
  }

  // string etp = 14;
  if (this->etp().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->etp().data(), static_cast<int>(this->etp().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "szfiu.StockDefine.etp");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->etp(), target);
  }

  // int32 etplevel = 15;
  if (this->etplevel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->etplevel(), target);
  }

  // string inverse = 16;
  if (this->inverse().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->inverse().data(), static_cast<int>(this->inverse().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "szfiu.StockDefine.inverse");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        16, this->inverse(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szfiu.StockDefine)
  return target;
}

size_t StockDefine::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szfiu.StockDefine)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string symbol = 2;
  if (this->symbol().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->symbol());
  }

  // string market = 3;
  if (this->market().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->market());
  }

  // string financial = 5;
  if (this->financial().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->financial());
  }

  // string roundlotonly = 7;
  if (this->roundlotonly().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->roundlotonly());
  }

  // string classification = 8;
  if (this->classification().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->classification());
  }

  // string subtype = 9;
  if (this->subtype().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->subtype());
  }

  // string authenticity = 10;
  if (this->authenticity().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->authenticity());
  }

  // string shortsale = 11;
  if (this->shortsale().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->shortsale());
  }

  // string ipo = 12;
  if (this->ipo().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ipo());
  }

  // string luld = 13;
  if (this->luld().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->luld());
  }

  // string etp = 14;
  if (this->etp().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->etp());
  }

  // string inverse = 16;
  if (this->inverse().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->inverse());
  }

  // int64 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->code());
  }

  // sint64 time = 4;
  if (this->time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->time());
  }

  // int32 roundlotsize = 6;
  if (this->roundlotsize() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->roundlotsize());
  }

  // int32 etplevel = 15;
  if (this->etplevel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->etplevel());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StockDefine::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:szfiu.StockDefine)
  GOOGLE_DCHECK_NE(&from, this);
  const StockDefine* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StockDefine>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:szfiu.StockDefine)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:szfiu.StockDefine)
    MergeFrom(*source);
  }
}

void StockDefine::MergeFrom(const StockDefine& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:szfiu.StockDefine)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.symbol().size() > 0) {

    symbol_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.symbol_);
  }
  if (from.market().size() > 0) {

    market_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.market_);
  }
  if (from.financial().size() > 0) {

    financial_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.financial_);
  }
  if (from.roundlotonly().size() > 0) {

    roundlotonly_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.roundlotonly_);
  }
  if (from.classification().size() > 0) {

    classification_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.classification_);
  }
  if (from.subtype().size() > 0) {

    subtype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.subtype_);
  }
  if (from.authenticity().size() > 0) {

    authenticity_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.authenticity_);
  }
  if (from.shortsale().size() > 0) {

    shortsale_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.shortsale_);
  }
  if (from.ipo().size() > 0) {

    ipo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ipo_);
  }
  if (from.luld().size() > 0) {

    luld_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.luld_);
  }
  if (from.etp().size() > 0) {

    etp_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.etp_);
  }
  if (from.inverse().size() > 0) {

    inverse_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.inverse_);
  }
  if (from.code() != 0) {
    set_code(from.code());
  }
  if (from.time() != 0) {
    set_time(from.time());
  }
  if (from.roundlotsize() != 0) {
    set_roundlotsize(from.roundlotsize());
  }
  if (from.etplevel() != 0) {
    set_etplevel(from.etplevel());
  }
}

void StockDefine::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:szfiu.StockDefine)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StockDefine::CopyFrom(const StockDefine& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szfiu.StockDefine)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StockDefine::IsInitialized() const {
  return true;
}

void StockDefine::Swap(StockDefine* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StockDefine::InternalSwap(StockDefine* other) {
  using std::swap;
  symbol_.Swap(&other->symbol_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  market_.Swap(&other->market_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  financial_.Swap(&other->financial_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  roundlotonly_.Swap(&other->roundlotonly_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  classification_.Swap(&other->classification_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  subtype_.Swap(&other->subtype_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  authenticity_.Swap(&other->authenticity_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  shortsale_.Swap(&other->shortsale_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  ipo_.Swap(&other->ipo_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  luld_.Swap(&other->luld_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  etp_.Swap(&other->etp_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  inverse_.Swap(&other->inverse_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(code_, other->code_);
  swap(time_, other->time_);
  swap(roundlotsize_, other->roundlotsize_);
  swap(etplevel_, other->etplevel_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata StockDefine::GetMetadata() const {
  protobuf_tv_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tv_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SystemEvent::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SystemEvent::kEventFieldNumber;
const int SystemEvent::kTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SystemEvent::SystemEvent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tv_2eproto::scc_info_SystemEvent.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:szfiu.SystemEvent)
}
SystemEvent::SystemEvent(const SystemEvent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&time_, &from.time_,
    static_cast<size_t>(reinterpret_cast<char*>(&event_) -
    reinterpret_cast<char*>(&time_)) + sizeof(event_));
  // @@protoc_insertion_point(copy_constructor:szfiu.SystemEvent)
}

void SystemEvent::SharedCtor() {
  ::memset(&time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&event_) -
      reinterpret_cast<char*>(&time_)) + sizeof(event_));
}

SystemEvent::~SystemEvent() {
  // @@protoc_insertion_point(destructor:szfiu.SystemEvent)
  SharedDtor();
}

void SystemEvent::SharedDtor() {
}

void SystemEvent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SystemEvent::descriptor() {
  ::protobuf_tv_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tv_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SystemEvent& SystemEvent::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tv_2eproto::scc_info_SystemEvent.base);
  return *internal_default_instance();
}


void SystemEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:szfiu.SystemEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&event_) -
      reinterpret_cast<char*>(&time_)) + sizeof(event_));
  _internal_metadata_.Clear();
}

bool SystemEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:szfiu.SystemEvent)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 event = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &event_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint64 time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:szfiu.SystemEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:szfiu.SystemEvent)
  return false;
#undef DO_
}

void SystemEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:szfiu.SystemEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 event = 1;
  if (this->event() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->event(), output);
  }

  // sint64 time = 2;
  if (this->time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(2, this->time(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:szfiu.SystemEvent)
}

::google::protobuf::uint8* SystemEvent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:szfiu.SystemEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 event = 1;
  if (this->event() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->event(), target);
  }

  // sint64 time = 2;
  if (this->time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(2, this->time(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szfiu.SystemEvent)
  return target;
}

size_t SystemEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szfiu.SystemEvent)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // sint64 time = 2;
  if (this->time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->time());
  }

  // int32 event = 1;
  if (this->event() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->event());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SystemEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:szfiu.SystemEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const SystemEvent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SystemEvent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:szfiu.SystemEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:szfiu.SystemEvent)
    MergeFrom(*source);
  }
}

void SystemEvent::MergeFrom(const SystemEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:szfiu.SystemEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.time() != 0) {
    set_time(from.time());
  }
  if (from.event() != 0) {
    set_event(from.event());
  }
}

void SystemEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:szfiu.SystemEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SystemEvent::CopyFrom(const SystemEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szfiu.SystemEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SystemEvent::IsInitialized() const {
  return true;
}

void SystemEvent::Swap(SystemEvent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SystemEvent::InternalSwap(SystemEvent* other) {
  using std::swap;
  swap(time_, other->time_);
  swap(event_, other->event_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SystemEvent::GetMetadata() const {
  protobuf_tv_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tv_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CrossTrade::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CrossTrade::kSymbolFieldNumber;
const int CrossTrade::kTimeFieldNumber;
const int CrossTrade::kPriceFieldNumber;
const int CrossTrade::kSharesFieldNumber;
const int CrossTrade::kTypeFieldNumber;
const int CrossTrade::kCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CrossTrade::CrossTrade()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tv_2eproto::scc_info_CrossTrade.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:szfiu.CrossTrade)
}
CrossTrade::CrossTrade(const CrossTrade& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  symbol_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.symbol().size() > 0) {
    symbol_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.symbol_);
  }
  ::memcpy(&time_, &from.time_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&time_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:szfiu.CrossTrade)
}

void CrossTrade::SharedCtor() {
  symbol_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&time_)) + sizeof(type_));
}

CrossTrade::~CrossTrade() {
  // @@protoc_insertion_point(destructor:szfiu.CrossTrade)
  SharedDtor();
}

void CrossTrade::SharedDtor() {
  symbol_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CrossTrade::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CrossTrade::descriptor() {
  ::protobuf_tv_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tv_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CrossTrade& CrossTrade::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tv_2eproto::scc_info_CrossTrade.base);
  return *internal_default_instance();
}


void CrossTrade::Clear() {
// @@protoc_insertion_point(message_clear_start:szfiu.CrossTrade)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  symbol_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&time_)) + sizeof(type_));
  _internal_metadata_.Clear();
}

bool CrossTrade::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:szfiu.CrossTrade)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string symbol = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_symbol()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->symbol().data(), static_cast<int>(this->symbol().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "szfiu.CrossTrade.symbol"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint64 time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 price = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &price_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 shares = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &shares_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 type = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 code = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:szfiu.CrossTrade)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:szfiu.CrossTrade)
  return false;
#undef DO_
}

void CrossTrade::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:szfiu.CrossTrade)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string symbol = 1;
  if (this->symbol().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->symbol().data(), static_cast<int>(this->symbol().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "szfiu.CrossTrade.symbol");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->symbol(), output);
  }

  // sint64 time = 2;
  if (this->time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(2, this->time(), output);
  }

  // int64 price = 3;
  if (this->price() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->price(), output);
  }

  // int64 shares = 4;
  if (this->shares() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->shares(), output);
  }

  // int32 type = 5;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->type(), output);
  }

  // int64 code = 6;
  if (this->code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->code(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:szfiu.CrossTrade)
}

::google::protobuf::uint8* CrossTrade::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:szfiu.CrossTrade)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string symbol = 1;
  if (this->symbol().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->symbol().data(), static_cast<int>(this->symbol().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "szfiu.CrossTrade.symbol");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->symbol(), target);
  }

  // sint64 time = 2;
  if (this->time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(2, this->time(), target);
  }

  // int64 price = 3;
  if (this->price() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->price(), target);
  }

  // int64 shares = 4;
  if (this->shares() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->shares(), target);
  }

  // int32 type = 5;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->type(), target);
  }

  // int64 code = 6;
  if (this->code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->code(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szfiu.CrossTrade)
  return target;
}

size_t CrossTrade::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szfiu.CrossTrade)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string symbol = 1;
  if (this->symbol().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->symbol());
  }

  // sint64 time = 2;
  if (this->time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->time());
  }

  // int64 price = 3;
  if (this->price() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->price());
  }

  // int64 shares = 4;
  if (this->shares() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->shares());
  }

  // int64 code = 6;
  if (this->code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->code());
  }

  // int32 type = 5;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CrossTrade::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:szfiu.CrossTrade)
  GOOGLE_DCHECK_NE(&from, this);
  const CrossTrade* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CrossTrade>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:szfiu.CrossTrade)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:szfiu.CrossTrade)
    MergeFrom(*source);
  }
}

void CrossTrade::MergeFrom(const CrossTrade& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:szfiu.CrossTrade)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.symbol().size() > 0) {

    symbol_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.symbol_);
  }
  if (from.time() != 0) {
    set_time(from.time());
  }
  if (from.price() != 0) {
    set_price(from.price());
  }
  if (from.shares() != 0) {
    set_shares(from.shares());
  }
  if (from.code() != 0) {
    set_code(from.code());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void CrossTrade::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:szfiu.CrossTrade)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CrossTrade::CopyFrom(const CrossTrade& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szfiu.CrossTrade)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CrossTrade::IsInitialized() const {
  return true;
}

void CrossTrade::Swap(CrossTrade* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CrossTrade::InternalSwap(CrossTrade* other) {
  using std::swap;
  symbol_.Swap(&other->symbol_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(time_, other->time_);
  swap(price_, other->price_);
  swap(shares_, other->shares_);
  swap(code_, other->code_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CrossTrade::GetMetadata() const {
  protobuf_tv_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tv_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OrderItem::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OrderItem::kPriceFieldNumber;
const int OrderItem::kQtyFieldNumber;
const int OrderItem::kMpidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OrderItem::OrderItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tv_2eproto::scc_info_OrderItem.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:szfiu.OrderItem)
}
OrderItem::OrderItem(const OrderItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  mpid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.mpid().size() > 0) {
    mpid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mpid_);
  }
  ::memcpy(&price_, &from.price_,
    static_cast<size_t>(reinterpret_cast<char*>(&qty_) -
    reinterpret_cast<char*>(&price_)) + sizeof(qty_));
  // @@protoc_insertion_point(copy_constructor:szfiu.OrderItem)
}

void OrderItem::SharedCtor() {
  mpid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&price_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&qty_) -
      reinterpret_cast<char*>(&price_)) + sizeof(qty_));
}

OrderItem::~OrderItem() {
  // @@protoc_insertion_point(destructor:szfiu.OrderItem)
  SharedDtor();
}

void OrderItem::SharedDtor() {
  mpid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OrderItem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* OrderItem::descriptor() {
  ::protobuf_tv_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tv_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OrderItem& OrderItem::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tv_2eproto::scc_info_OrderItem.base);
  return *internal_default_instance();
}


void OrderItem::Clear() {
// @@protoc_insertion_point(message_clear_start:szfiu.OrderItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mpid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&price_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&qty_) -
      reinterpret_cast<char*>(&price_)) + sizeof(qty_));
  _internal_metadata_.Clear();
}

bool OrderItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:szfiu.OrderItem)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 price = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &price_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 qty = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &qty_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string mpid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mpid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->mpid().data(), static_cast<int>(this->mpid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "szfiu.OrderItem.mpid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:szfiu.OrderItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:szfiu.OrderItem)
  return false;
#undef DO_
}

void OrderItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:szfiu.OrderItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 price = 1;
  if (this->price() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->price(), output);
  }

  // int32 qty = 2;
  if (this->qty() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->qty(), output);
  }

  // string mpid = 3;
  if (this->mpid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mpid().data(), static_cast<int>(this->mpid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "szfiu.OrderItem.mpid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->mpid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:szfiu.OrderItem)
}

::google::protobuf::uint8* OrderItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:szfiu.OrderItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 price = 1;
  if (this->price() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->price(), target);
  }

  // int32 qty = 2;
  if (this->qty() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->qty(), target);
  }

  // string mpid = 3;
  if (this->mpid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mpid().data(), static_cast<int>(this->mpid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "szfiu.OrderItem.mpid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->mpid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szfiu.OrderItem)
  return target;
}

size_t OrderItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szfiu.OrderItem)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string mpid = 3;
  if (this->mpid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mpid());
  }

  // int64 price = 1;
  if (this->price() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->price());
  }

  // int32 qty = 2;
  if (this->qty() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->qty());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OrderItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:szfiu.OrderItem)
  GOOGLE_DCHECK_NE(&from, this);
  const OrderItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OrderItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:szfiu.OrderItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:szfiu.OrderItem)
    MergeFrom(*source);
  }
}

void OrderItem::MergeFrom(const OrderItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:szfiu.OrderItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.mpid().size() > 0) {

    mpid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mpid_);
  }
  if (from.price() != 0) {
    set_price(from.price());
  }
  if (from.qty() != 0) {
    set_qty(from.qty());
  }
}

void OrderItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:szfiu.OrderItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OrderItem::CopyFrom(const OrderItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szfiu.OrderItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OrderItem::IsInitialized() const {
  return true;
}

void OrderItem::Swap(OrderItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OrderItem::InternalSwap(OrderItem* other) {
  using std::swap;
  mpid_.Swap(&other->mpid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(price_, other->price_);
  swap(qty_, other->qty_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata OrderItem::GetMetadata() const {
  protobuf_tv_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tv_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OrderList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OrderList::kSymbolFieldNumber;
const int OrderList::kTimeFieldNumber;
const int OrderList::kBidlistFieldNumber;
const int OrderList::kAsklistFieldNumber;
const int OrderList::kCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OrderList::OrderList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tv_2eproto::scc_info_OrderList.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:szfiu.OrderList)
}
OrderList::OrderList(const OrderList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      bidlist_(from.bidlist_),
      asklist_(from.asklist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  symbol_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.symbol().size() > 0) {
    symbol_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.symbol_);
  }
  ::memcpy(&time_, &from.time_,
    static_cast<size_t>(reinterpret_cast<char*>(&code_) -
    reinterpret_cast<char*>(&time_)) + sizeof(code_));
  // @@protoc_insertion_point(copy_constructor:szfiu.OrderList)
}

void OrderList::SharedCtor() {
  symbol_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&code_) -
      reinterpret_cast<char*>(&time_)) + sizeof(code_));
}

OrderList::~OrderList() {
  // @@protoc_insertion_point(destructor:szfiu.OrderList)
  SharedDtor();
}

void OrderList::SharedDtor() {
  symbol_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OrderList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* OrderList::descriptor() {
  ::protobuf_tv_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tv_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OrderList& OrderList::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tv_2eproto::scc_info_OrderList.base);
  return *internal_default_instance();
}


void OrderList::Clear() {
// @@protoc_insertion_point(message_clear_start:szfiu.OrderList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bidlist_.Clear();
  asklist_.Clear();
  symbol_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&code_) -
      reinterpret_cast<char*>(&time_)) + sizeof(code_));
  _internal_metadata_.Clear();
}

bool OrderList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:szfiu.OrderList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string symbol = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_symbol()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->symbol().data(), static_cast<int>(this->symbol().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "szfiu.OrderList.symbol"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint64 time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .szfiu.OrderItem bidlist = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_bidlist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .szfiu.OrderItem asklist = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_asklist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 code = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:szfiu.OrderList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:szfiu.OrderList)
  return false;
#undef DO_
}

void OrderList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:szfiu.OrderList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string symbol = 1;
  if (this->symbol().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->symbol().data(), static_cast<int>(this->symbol().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "szfiu.OrderList.symbol");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->symbol(), output);
  }

  // sint64 time = 2;
  if (this->time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(2, this->time(), output);
  }

  // repeated .szfiu.OrderItem bidlist = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->bidlist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->bidlist(static_cast<int>(i)),
      output);
  }

  // repeated .szfiu.OrderItem asklist = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->asklist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->asklist(static_cast<int>(i)),
      output);
  }

  // int64 code = 5;
  if (this->code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->code(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:szfiu.OrderList)
}

::google::protobuf::uint8* OrderList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:szfiu.OrderList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string symbol = 1;
  if (this->symbol().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->symbol().data(), static_cast<int>(this->symbol().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "szfiu.OrderList.symbol");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->symbol(), target);
  }

  // sint64 time = 2;
  if (this->time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(2, this->time(), target);
  }

  // repeated .szfiu.OrderItem bidlist = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->bidlist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->bidlist(static_cast<int>(i)), deterministic, target);
  }

  // repeated .szfiu.OrderItem asklist = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->asklist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->asklist(static_cast<int>(i)), deterministic, target);
  }

  // int64 code = 5;
  if (this->code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->code(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szfiu.OrderList)
  return target;
}

size_t OrderList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szfiu.OrderList)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .szfiu.OrderItem bidlist = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->bidlist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->bidlist(static_cast<int>(i)));
    }
  }

  // repeated .szfiu.OrderItem asklist = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->asklist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->asklist(static_cast<int>(i)));
    }
  }

  // string symbol = 1;
  if (this->symbol().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->symbol());
  }

  // sint64 time = 2;
  if (this->time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->time());
  }

  // int64 code = 5;
  if (this->code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OrderList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:szfiu.OrderList)
  GOOGLE_DCHECK_NE(&from, this);
  const OrderList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OrderList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:szfiu.OrderList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:szfiu.OrderList)
    MergeFrom(*source);
  }
}

void OrderList::MergeFrom(const OrderList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:szfiu.OrderList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  bidlist_.MergeFrom(from.bidlist_);
  asklist_.MergeFrom(from.asklist_);
  if (from.symbol().size() > 0) {

    symbol_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.symbol_);
  }
  if (from.time() != 0) {
    set_time(from.time());
  }
  if (from.code() != 0) {
    set_code(from.code());
  }
}

void OrderList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:szfiu.OrderList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OrderList::CopyFrom(const OrderList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szfiu.OrderList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OrderList::IsInitialized() const {
  return true;
}

void OrderList::Swap(OrderList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OrderList::InternalSwap(OrderList* other) {
  using std::swap;
  CastToBase(&bidlist_)->InternalSwap(CastToBase(&other->bidlist_));
  CastToBase(&asklist_)->InternalSwap(CastToBase(&other->asklist_));
  symbol_.Swap(&other->symbol_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(time_, other->time_);
  swap(code_, other->code_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata OrderList::GetMetadata() const {
  protobuf_tv_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tv_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LevelList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LevelList::kSymbolFieldNumber;
const int LevelList::kTimeFieldNumber;
const int LevelList::kBidlistFieldNumber;
const int LevelList::kAsklistFieldNumber;
const int LevelList::kCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LevelList::LevelList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tv_2eproto::scc_info_LevelList.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:szfiu.LevelList)
}
LevelList::LevelList(const LevelList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      bidlist_(from.bidlist_),
      asklist_(from.asklist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  symbol_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.symbol().size() > 0) {
    symbol_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.symbol_);
  }
  ::memcpy(&time_, &from.time_,
    static_cast<size_t>(reinterpret_cast<char*>(&code_) -
    reinterpret_cast<char*>(&time_)) + sizeof(code_));
  // @@protoc_insertion_point(copy_constructor:szfiu.LevelList)
}

void LevelList::SharedCtor() {
  symbol_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&code_) -
      reinterpret_cast<char*>(&time_)) + sizeof(code_));
}

LevelList::~LevelList() {
  // @@protoc_insertion_point(destructor:szfiu.LevelList)
  SharedDtor();
}

void LevelList::SharedDtor() {
  symbol_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LevelList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LevelList::descriptor() {
  ::protobuf_tv_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tv_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LevelList& LevelList::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tv_2eproto::scc_info_LevelList.base);
  return *internal_default_instance();
}


void LevelList::Clear() {
// @@protoc_insertion_point(message_clear_start:szfiu.LevelList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bidlist_.Clear();
  asklist_.Clear();
  symbol_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&code_) -
      reinterpret_cast<char*>(&time_)) + sizeof(code_));
  _internal_metadata_.Clear();
}

bool LevelList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:szfiu.LevelList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string symbol = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_symbol()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->symbol().data(), static_cast<int>(this->symbol().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "szfiu.LevelList.symbol"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint64 time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .szfiu.OrderItem bidlist = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_bidlist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .szfiu.OrderItem asklist = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_asklist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 code = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:szfiu.LevelList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:szfiu.LevelList)
  return false;
#undef DO_
}

void LevelList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:szfiu.LevelList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string symbol = 1;
  if (this->symbol().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->symbol().data(), static_cast<int>(this->symbol().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "szfiu.LevelList.symbol");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->symbol(), output);
  }

  // sint64 time = 2;
  if (this->time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(2, this->time(), output);
  }

  // repeated .szfiu.OrderItem bidlist = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->bidlist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->bidlist(static_cast<int>(i)),
      output);
  }

  // repeated .szfiu.OrderItem asklist = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->asklist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->asklist(static_cast<int>(i)),
      output);
  }

  // int64 code = 5;
  if (this->code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->code(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:szfiu.LevelList)
}

::google::protobuf::uint8* LevelList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:szfiu.LevelList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string symbol = 1;
  if (this->symbol().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->symbol().data(), static_cast<int>(this->symbol().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "szfiu.LevelList.symbol");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->symbol(), target);
  }

  // sint64 time = 2;
  if (this->time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(2, this->time(), target);
  }

  // repeated .szfiu.OrderItem bidlist = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->bidlist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->bidlist(static_cast<int>(i)), deterministic, target);
  }

  // repeated .szfiu.OrderItem asklist = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->asklist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->asklist(static_cast<int>(i)), deterministic, target);
  }

  // int64 code = 5;
  if (this->code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->code(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szfiu.LevelList)
  return target;
}

size_t LevelList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szfiu.LevelList)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .szfiu.OrderItem bidlist = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->bidlist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->bidlist(static_cast<int>(i)));
    }
  }

  // repeated .szfiu.OrderItem asklist = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->asklist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->asklist(static_cast<int>(i)));
    }
  }

  // string symbol = 1;
  if (this->symbol().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->symbol());
  }

  // sint64 time = 2;
  if (this->time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->time());
  }

  // int64 code = 5;
  if (this->code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LevelList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:szfiu.LevelList)
  GOOGLE_DCHECK_NE(&from, this);
  const LevelList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LevelList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:szfiu.LevelList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:szfiu.LevelList)
    MergeFrom(*source);
  }
}

void LevelList::MergeFrom(const LevelList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:szfiu.LevelList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  bidlist_.MergeFrom(from.bidlist_);
  asklist_.MergeFrom(from.asklist_);
  if (from.symbol().size() > 0) {

    symbol_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.symbol_);
  }
  if (from.time() != 0) {
    set_time(from.time());
  }
  if (from.code() != 0) {
    set_code(from.code());
  }
}

void LevelList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:szfiu.LevelList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LevelList::CopyFrom(const LevelList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szfiu.LevelList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LevelList::IsInitialized() const {
  return true;
}

void LevelList::Swap(LevelList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LevelList::InternalSwap(LevelList* other) {
  using std::swap;
  CastToBase(&bidlist_)->InternalSwap(CastToBase(&other->bidlist_));
  CastToBase(&asklist_)->InternalSwap(CastToBase(&other->asklist_));
  symbol_.Swap(&other->symbol_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(time_, other->time_);
  swap(code_, other->code_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LevelList::GetMetadata() const {
  protobuf_tv_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tv_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OrderImbalance::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OrderImbalance::kSymbolFieldNumber;
const int OrderImbalance::kTimeFieldNumber;
const int OrderImbalance::kPariedSharesFieldNumber;
const int OrderImbalance::kImbalanceFieldNumber;
const int OrderImbalance::kDirFieldNumber;
const int OrderImbalance::kFarPriceFieldNumber;
const int OrderImbalance::kNearPriceFieldNumber;
const int OrderImbalance::kRefPriceFieldNumber;
const int OrderImbalance::kCrossTypeFieldNumber;
const int OrderImbalance::kVaritationFieldNumber;
const int OrderImbalance::kCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OrderImbalance::OrderImbalance()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tv_2eproto::scc_info_OrderImbalance.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:szfiu.OrderImbalance)
}
OrderImbalance::OrderImbalance(const OrderImbalance& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  symbol_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.symbol().size() > 0) {
    symbol_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.symbol_);
  }
  dir_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.dir().size() > 0) {
    dir_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dir_);
  }
  cross_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cross_type().size() > 0) {
    cross_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cross_type_);
  }
  varitation_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.varitation().size() > 0) {
    varitation_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.varitation_);
  }
  ::memcpy(&time_, &from.time_,
    static_cast<size_t>(reinterpret_cast<char*>(&ref_price_) -
    reinterpret_cast<char*>(&time_)) + sizeof(ref_price_));
  // @@protoc_insertion_point(copy_constructor:szfiu.OrderImbalance)
}

void OrderImbalance::SharedCtor() {
  symbol_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dir_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cross_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  varitation_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ref_price_) -
      reinterpret_cast<char*>(&time_)) + sizeof(ref_price_));
}

OrderImbalance::~OrderImbalance() {
  // @@protoc_insertion_point(destructor:szfiu.OrderImbalance)
  SharedDtor();
}

void OrderImbalance::SharedDtor() {
  symbol_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dir_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cross_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  varitation_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OrderImbalance::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* OrderImbalance::descriptor() {
  ::protobuf_tv_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tv_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OrderImbalance& OrderImbalance::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tv_2eproto::scc_info_OrderImbalance.base);
  return *internal_default_instance();
}


void OrderImbalance::Clear() {
// @@protoc_insertion_point(message_clear_start:szfiu.OrderImbalance)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  symbol_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dir_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cross_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  varitation_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ref_price_) -
      reinterpret_cast<char*>(&time_)) + sizeof(ref_price_));
  _internal_metadata_.Clear();
}

bool OrderImbalance::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:szfiu.OrderImbalance)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string symbol = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_symbol()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->symbol().data(), static_cast<int>(this->symbol().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "szfiu.OrderImbalance.symbol"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint64 time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 paried_shares = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &paried_shares_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 imbalance = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &imbalance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string dir = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dir()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->dir().data(), static_cast<int>(this->dir().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "szfiu.OrderImbalance.dir"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 far_price = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &far_price_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 near_price = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &near_price_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 ref_price = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ref_price_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cross_type = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cross_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cross_type().data(), static_cast<int>(this->cross_type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "szfiu.OrderImbalance.cross_type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string varitation = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_varitation()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->varitation().data(), static_cast<int>(this->varitation().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "szfiu.OrderImbalance.varitation"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 code = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:szfiu.OrderImbalance)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:szfiu.OrderImbalance)
  return false;
#undef DO_
}

void OrderImbalance::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:szfiu.OrderImbalance)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string symbol = 1;
  if (this->symbol().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->symbol().data(), static_cast<int>(this->symbol().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "szfiu.OrderImbalance.symbol");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->symbol(), output);
  }

  // sint64 time = 2;
  if (this->time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(2, this->time(), output);
  }

  // int64 paried_shares = 3;
  if (this->paried_shares() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->paried_shares(), output);
  }

  // int64 imbalance = 4;
  if (this->imbalance() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->imbalance(), output);
  }

  // string dir = 5;
  if (this->dir().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dir().data(), static_cast<int>(this->dir().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "szfiu.OrderImbalance.dir");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->dir(), output);
  }

  // int32 far_price = 6;
  if (this->far_price() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->far_price(), output);
  }

  // int32 near_price = 7;
  if (this->near_price() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->near_price(), output);
  }

  // int32 ref_price = 8;
  if (this->ref_price() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->ref_price(), output);
  }

  // string cross_type = 9;
  if (this->cross_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cross_type().data(), static_cast<int>(this->cross_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "szfiu.OrderImbalance.cross_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->cross_type(), output);
  }

  // string varitation = 10;
  if (this->varitation().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->varitation().data(), static_cast<int>(this->varitation().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "szfiu.OrderImbalance.varitation");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->varitation(), output);
  }

  // int64 code = 11;
  if (this->code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(11, this->code(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:szfiu.OrderImbalance)
}

::google::protobuf::uint8* OrderImbalance::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:szfiu.OrderImbalance)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string symbol = 1;
  if (this->symbol().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->symbol().data(), static_cast<int>(this->symbol().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "szfiu.OrderImbalance.symbol");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->symbol(), target);
  }

  // sint64 time = 2;
  if (this->time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(2, this->time(), target);
  }

  // int64 paried_shares = 3;
  if (this->paried_shares() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->paried_shares(), target);
  }

  // int64 imbalance = 4;
  if (this->imbalance() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->imbalance(), target);
  }

  // string dir = 5;
  if (this->dir().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dir().data(), static_cast<int>(this->dir().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "szfiu.OrderImbalance.dir");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->dir(), target);
  }

  // int32 far_price = 6;
  if (this->far_price() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->far_price(), target);
  }

  // int32 near_price = 7;
  if (this->near_price() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->near_price(), target);
  }

  // int32 ref_price = 8;
  if (this->ref_price() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->ref_price(), target);
  }

  // string cross_type = 9;
  if (this->cross_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cross_type().data(), static_cast<int>(this->cross_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "szfiu.OrderImbalance.cross_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->cross_type(), target);
  }

  // string varitation = 10;
  if (this->varitation().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->varitation().data(), static_cast<int>(this->varitation().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "szfiu.OrderImbalance.varitation");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->varitation(), target);
  }

  // int64 code = 11;
  if (this->code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(11, this->code(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szfiu.OrderImbalance)
  return target;
}

size_t OrderImbalance::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szfiu.OrderImbalance)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string symbol = 1;
  if (this->symbol().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->symbol());
  }

  // string dir = 5;
  if (this->dir().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->dir());
  }

  // string cross_type = 9;
  if (this->cross_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cross_type());
  }

  // string varitation = 10;
  if (this->varitation().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->varitation());
  }

  // sint64 time = 2;
  if (this->time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->time());
  }

  // int64 paried_shares = 3;
  if (this->paried_shares() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->paried_shares());
  }

  // int64 imbalance = 4;
  if (this->imbalance() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->imbalance());
  }

  // int32 far_price = 6;
  if (this->far_price() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->far_price());
  }

  // int32 near_price = 7;
  if (this->near_price() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->near_price());
  }

  // int64 code = 11;
  if (this->code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->code());
  }

  // int32 ref_price = 8;
  if (this->ref_price() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ref_price());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OrderImbalance::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:szfiu.OrderImbalance)
  GOOGLE_DCHECK_NE(&from, this);
  const OrderImbalance* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OrderImbalance>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:szfiu.OrderImbalance)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:szfiu.OrderImbalance)
    MergeFrom(*source);
  }
}

void OrderImbalance::MergeFrom(const OrderImbalance& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:szfiu.OrderImbalance)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.symbol().size() > 0) {

    symbol_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.symbol_);
  }
  if (from.dir().size() > 0) {

    dir_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dir_);
  }
  if (from.cross_type().size() > 0) {

    cross_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cross_type_);
  }
  if (from.varitation().size() > 0) {

    varitation_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.varitation_);
  }
  if (from.time() != 0) {
    set_time(from.time());
  }
  if (from.paried_shares() != 0) {
    set_paried_shares(from.paried_shares());
  }
  if (from.imbalance() != 0) {
    set_imbalance(from.imbalance());
  }
  if (from.far_price() != 0) {
    set_far_price(from.far_price());
  }
  if (from.near_price() != 0) {
    set_near_price(from.near_price());
  }
  if (from.code() != 0) {
    set_code(from.code());
  }
  if (from.ref_price() != 0) {
    set_ref_price(from.ref_price());
  }
}

void OrderImbalance::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:szfiu.OrderImbalance)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OrderImbalance::CopyFrom(const OrderImbalance& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szfiu.OrderImbalance)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OrderImbalance::IsInitialized() const {
  return true;
}

void OrderImbalance::Swap(OrderImbalance* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OrderImbalance::InternalSwap(OrderImbalance* other) {
  using std::swap;
  symbol_.Swap(&other->symbol_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  dir_.Swap(&other->dir_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  cross_type_.Swap(&other->cross_type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  varitation_.Swap(&other->varitation_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(time_, other->time_);
  swap(paried_shares_, other->paried_shares_);
  swap(imbalance_, other->imbalance_);
  swap(far_price_, other->far_price_);
  swap(near_price_, other->near_price_);
  swap(code_, other->code_);
  swap(ref_price_, other->ref_price_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata OrderImbalance::GetMetadata() const {
  protobuf_tv_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tv_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MoneyFlow::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MoneyFlow::kSymbolFieldNumber;
const int MoneyFlow::kTimeFieldNumber;
const int MoneyFlow::kPriceFieldNumber;
const int MoneyFlow::kQtyFieldNumber;
const int MoneyFlow::kDirFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MoneyFlow::MoneyFlow()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tv_2eproto::scc_info_MoneyFlow.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:szfiu.MoneyFlow)
}
MoneyFlow::MoneyFlow(const MoneyFlow& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  symbol_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.symbol().size() > 0) {
    symbol_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.symbol_);
  }
  dir_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.dir().size() > 0) {
    dir_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dir_);
  }
  ::memcpy(&time_, &from.time_,
    static_cast<size_t>(reinterpret_cast<char*>(&qty_) -
    reinterpret_cast<char*>(&time_)) + sizeof(qty_));
  // @@protoc_insertion_point(copy_constructor:szfiu.MoneyFlow)
}

void MoneyFlow::SharedCtor() {
  symbol_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dir_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&qty_) -
      reinterpret_cast<char*>(&time_)) + sizeof(qty_));
}

MoneyFlow::~MoneyFlow() {
  // @@protoc_insertion_point(destructor:szfiu.MoneyFlow)
  SharedDtor();
}

void MoneyFlow::SharedDtor() {
  symbol_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dir_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MoneyFlow::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MoneyFlow::descriptor() {
  ::protobuf_tv_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tv_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MoneyFlow& MoneyFlow::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tv_2eproto::scc_info_MoneyFlow.base);
  return *internal_default_instance();
}


void MoneyFlow::Clear() {
// @@protoc_insertion_point(message_clear_start:szfiu.MoneyFlow)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  symbol_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dir_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&qty_) -
      reinterpret_cast<char*>(&time_)) + sizeof(qty_));
  _internal_metadata_.Clear();
}

bool MoneyFlow::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:szfiu.MoneyFlow)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string symbol = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_symbol()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->symbol().data(), static_cast<int>(this->symbol().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "szfiu.MoneyFlow.symbol"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint64 time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 price = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &price_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 qty = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &qty_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string dir = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dir()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->dir().data(), static_cast<int>(this->dir().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "szfiu.MoneyFlow.dir"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:szfiu.MoneyFlow)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:szfiu.MoneyFlow)
  return false;
#undef DO_
}

void MoneyFlow::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:szfiu.MoneyFlow)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string symbol = 1;
  if (this->symbol().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->symbol().data(), static_cast<int>(this->symbol().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "szfiu.MoneyFlow.symbol");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->symbol(), output);
  }

  // sint64 time = 2;
  if (this->time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(2, this->time(), output);
  }

  // int64 price = 3;
  if (this->price() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->price(), output);
  }

  // int64 qty = 4;
  if (this->qty() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->qty(), output);
  }

  // string dir = 5;
  if (this->dir().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dir().data(), static_cast<int>(this->dir().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "szfiu.MoneyFlow.dir");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->dir(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:szfiu.MoneyFlow)
}

::google::protobuf::uint8* MoneyFlow::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:szfiu.MoneyFlow)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string symbol = 1;
  if (this->symbol().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->symbol().data(), static_cast<int>(this->symbol().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "szfiu.MoneyFlow.symbol");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->symbol(), target);
  }

  // sint64 time = 2;
  if (this->time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(2, this->time(), target);
  }

  // int64 price = 3;
  if (this->price() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->price(), target);
  }

  // int64 qty = 4;
  if (this->qty() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->qty(), target);
  }

  // string dir = 5;
  if (this->dir().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dir().data(), static_cast<int>(this->dir().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "szfiu.MoneyFlow.dir");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->dir(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szfiu.MoneyFlow)
  return target;
}

size_t MoneyFlow::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szfiu.MoneyFlow)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string symbol = 1;
  if (this->symbol().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->symbol());
  }

  // string dir = 5;
  if (this->dir().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->dir());
  }

  // sint64 time = 2;
  if (this->time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->time());
  }

  // int64 price = 3;
  if (this->price() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->price());
  }

  // int64 qty = 4;
  if (this->qty() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->qty());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MoneyFlow::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:szfiu.MoneyFlow)
  GOOGLE_DCHECK_NE(&from, this);
  const MoneyFlow* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MoneyFlow>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:szfiu.MoneyFlow)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:szfiu.MoneyFlow)
    MergeFrom(*source);
  }
}

void MoneyFlow::MergeFrom(const MoneyFlow& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:szfiu.MoneyFlow)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.symbol().size() > 0) {

    symbol_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.symbol_);
  }
  if (from.dir().size() > 0) {

    dir_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dir_);
  }
  if (from.time() != 0) {
    set_time(from.time());
  }
  if (from.price() != 0) {
    set_price(from.price());
  }
  if (from.qty() != 0) {
    set_qty(from.qty());
  }
}

void MoneyFlow::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:szfiu.MoneyFlow)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MoneyFlow::CopyFrom(const MoneyFlow& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szfiu.MoneyFlow)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MoneyFlow::IsInitialized() const {
  return true;
}

void MoneyFlow::Swap(MoneyFlow* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MoneyFlow::InternalSwap(MoneyFlow* other) {
  using std::swap;
  symbol_.Swap(&other->symbol_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  dir_.Swap(&other->dir_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(time_, other->time_);
  swap(price_, other->price_);
  swap(qty_, other->qty_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MoneyFlow::GetMetadata() const {
  protobuf_tv_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tv_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AddOrder::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddOrder::kCodeFieldNumber;
const int AddOrder::kTimeFieldNumber;
const int AddOrder::kOrderidFieldNumber;
const int AddOrder::kSideFieldNumber;
const int AddOrder::kPriceFieldNumber;
const int AddOrder::kSharesFieldNumber;
const int AddOrder::kAttrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddOrder::AddOrder()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tv_2eproto::scc_info_AddOrder.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:szfiu.AddOrder)
}
AddOrder::AddOrder(const AddOrder& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  attr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.attr().size() > 0) {
    attr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attr_);
  }
  ::memcpy(&time_, &from.time_,
    static_cast<size_t>(reinterpret_cast<char*>(&shares_) -
    reinterpret_cast<char*>(&time_)) + sizeof(shares_));
  // @@protoc_insertion_point(copy_constructor:szfiu.AddOrder)
}

void AddOrder::SharedCtor() {
  attr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&shares_) -
      reinterpret_cast<char*>(&time_)) + sizeof(shares_));
}

AddOrder::~AddOrder() {
  // @@protoc_insertion_point(destructor:szfiu.AddOrder)
  SharedDtor();
}

void AddOrder::SharedDtor() {
  attr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AddOrder::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AddOrder::descriptor() {
  ::protobuf_tv_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tv_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AddOrder& AddOrder::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tv_2eproto::scc_info_AddOrder.base);
  return *internal_default_instance();
}


void AddOrder::Clear() {
// @@protoc_insertion_point(message_clear_start:szfiu.AddOrder)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  attr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&shares_) -
      reinterpret_cast<char*>(&time_)) + sizeof(shares_));
  _internal_metadata_.Clear();
}

bool AddOrder::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:szfiu.AddOrder)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint64 time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 orderid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &orderid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 side = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &side_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 price = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &price_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 shares = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &shares_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string attr = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_attr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->attr().data(), static_cast<int>(this->attr().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "szfiu.AddOrder.attr"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:szfiu.AddOrder)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:szfiu.AddOrder)
  return false;
#undef DO_
}

void AddOrder::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:szfiu.AddOrder)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->code(), output);
  }

  // sint64 time = 2;
  if (this->time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(2, this->time(), output);
  }

  // int64 orderid = 3;
  if (this->orderid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->orderid(), output);
  }

  // int32 side = 4;
  if (this->side() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->side(), output);
  }

  // int32 price = 5;
  if (this->price() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->price(), output);
  }

  // int32 shares = 6;
  if (this->shares() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->shares(), output);
  }

  // string attr = 7;
  if (this->attr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->attr().data(), static_cast<int>(this->attr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "szfiu.AddOrder.attr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->attr(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:szfiu.AddOrder)
}

::google::protobuf::uint8* AddOrder::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:szfiu.AddOrder)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->code(), target);
  }

  // sint64 time = 2;
  if (this->time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(2, this->time(), target);
  }

  // int64 orderid = 3;
  if (this->orderid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->orderid(), target);
  }

  // int32 side = 4;
  if (this->side() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->side(), target);
  }

  // int32 price = 5;
  if (this->price() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->price(), target);
  }

  // int32 shares = 6;
  if (this->shares() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->shares(), target);
  }

  // string attr = 7;
  if (this->attr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->attr().data(), static_cast<int>(this->attr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "szfiu.AddOrder.attr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->attr(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szfiu.AddOrder)
  return target;
}

size_t AddOrder::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szfiu.AddOrder)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string attr = 7;
  if (this->attr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->attr());
  }

  // sint64 time = 2;
  if (this->time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->time());
  }

  // int32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->code());
  }

  // int32 side = 4;
  if (this->side() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->side());
  }

  // int64 orderid = 3;
  if (this->orderid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->orderid());
  }

  // int32 price = 5;
  if (this->price() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->price());
  }

  // int32 shares = 6;
  if (this->shares() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->shares());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddOrder::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:szfiu.AddOrder)
  GOOGLE_DCHECK_NE(&from, this);
  const AddOrder* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddOrder>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:szfiu.AddOrder)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:szfiu.AddOrder)
    MergeFrom(*source);
  }
}

void AddOrder::MergeFrom(const AddOrder& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:szfiu.AddOrder)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.attr().size() > 0) {

    attr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attr_);
  }
  if (from.time() != 0) {
    set_time(from.time());
  }
  if (from.code() != 0) {
    set_code(from.code());
  }
  if (from.side() != 0) {
    set_side(from.side());
  }
  if (from.orderid() != 0) {
    set_orderid(from.orderid());
  }
  if (from.price() != 0) {
    set_price(from.price());
  }
  if (from.shares() != 0) {
    set_shares(from.shares());
  }
}

void AddOrder::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:szfiu.AddOrder)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddOrder::CopyFrom(const AddOrder& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szfiu.AddOrder)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddOrder::IsInitialized() const {
  return true;
}

void AddOrder::Swap(AddOrder* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddOrder::InternalSwap(AddOrder* other) {
  using std::swap;
  attr_.Swap(&other->attr_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(time_, other->time_);
  swap(code_, other->code_);
  swap(side_, other->side_);
  swap(orderid_, other->orderid_);
  swap(price_, other->price_);
  swap(shares_, other->shares_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AddOrder::GetMetadata() const {
  protobuf_tv_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tv_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OrderExe::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OrderExe::kCodeFieldNumber;
const int OrderExe::kTimeFieldNumber;
const int OrderExe::kOrderidFieldNumber;
const int OrderExe::kSharesFieldNumber;
const int OrderExe::kMatchNumFieldNumber;
const int OrderExe::kPrintFieldNumber;
const int OrderExe::kPriceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OrderExe::OrderExe()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tv_2eproto::scc_info_OrderExe.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:szfiu.OrderExe)
}
OrderExe::OrderExe(const OrderExe& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&time_, &from.time_,
    static_cast<size_t>(reinterpret_cast<char*>(&price_) -
    reinterpret_cast<char*>(&time_)) + sizeof(price_));
  // @@protoc_insertion_point(copy_constructor:szfiu.OrderExe)
}

void OrderExe::SharedCtor() {
  ::memset(&time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&price_) -
      reinterpret_cast<char*>(&time_)) + sizeof(price_));
}

OrderExe::~OrderExe() {
  // @@protoc_insertion_point(destructor:szfiu.OrderExe)
  SharedDtor();
}

void OrderExe::SharedDtor() {
}

void OrderExe::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* OrderExe::descriptor() {
  ::protobuf_tv_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tv_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OrderExe& OrderExe::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tv_2eproto::scc_info_OrderExe.base);
  return *internal_default_instance();
}


void OrderExe::Clear() {
// @@protoc_insertion_point(message_clear_start:szfiu.OrderExe)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&price_) -
      reinterpret_cast<char*>(&time_)) + sizeof(price_));
  _internal_metadata_.Clear();
}

bool OrderExe::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:szfiu.OrderExe)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint64 time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 orderid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &orderid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 shares = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &shares_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 match_num = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &match_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 print = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &print_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 price = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &price_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:szfiu.OrderExe)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:szfiu.OrderExe)
  return false;
#undef DO_
}

void OrderExe::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:szfiu.OrderExe)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->code(), output);
  }

  // sint64 time = 2;
  if (this->time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(2, this->time(), output);
  }

  // int64 orderid = 3;
  if (this->orderid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->orderid(), output);
  }

  // int32 shares = 4;
  if (this->shares() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->shares(), output);
  }

  // int64 match_num = 5;
  if (this->match_num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->match_num(), output);
  }

  // int32 print = 6;
  if (this->print() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->print(), output);
  }

  // int32 price = 7;
  if (this->price() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->price(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:szfiu.OrderExe)
}

::google::protobuf::uint8* OrderExe::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:szfiu.OrderExe)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->code(), target);
  }

  // sint64 time = 2;
  if (this->time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(2, this->time(), target);
  }

  // int64 orderid = 3;
  if (this->orderid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->orderid(), target);
  }

  // int32 shares = 4;
  if (this->shares() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->shares(), target);
  }

  // int64 match_num = 5;
  if (this->match_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->match_num(), target);
  }

  // int32 print = 6;
  if (this->print() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->print(), target);
  }

  // int32 price = 7;
  if (this->price() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->price(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szfiu.OrderExe)
  return target;
}

size_t OrderExe::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szfiu.OrderExe)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // sint64 time = 2;
  if (this->time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->time());
  }

  // int32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->code());
  }

  // int32 shares = 4;
  if (this->shares() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->shares());
  }

  // int64 orderid = 3;
  if (this->orderid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->orderid());
  }

  // int64 match_num = 5;
  if (this->match_num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->match_num());
  }

  // int32 print = 6;
  if (this->print() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->print());
  }

  // int32 price = 7;
  if (this->price() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->price());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OrderExe::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:szfiu.OrderExe)
  GOOGLE_DCHECK_NE(&from, this);
  const OrderExe* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OrderExe>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:szfiu.OrderExe)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:szfiu.OrderExe)
    MergeFrom(*source);
  }
}

void OrderExe::MergeFrom(const OrderExe& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:szfiu.OrderExe)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.time() != 0) {
    set_time(from.time());
  }
  if (from.code() != 0) {
    set_code(from.code());
  }
  if (from.shares() != 0) {
    set_shares(from.shares());
  }
  if (from.orderid() != 0) {
    set_orderid(from.orderid());
  }
  if (from.match_num() != 0) {
    set_match_num(from.match_num());
  }
  if (from.print() != 0) {
    set_print(from.print());
  }
  if (from.price() != 0) {
    set_price(from.price());
  }
}

void OrderExe::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:szfiu.OrderExe)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OrderExe::CopyFrom(const OrderExe& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szfiu.OrderExe)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OrderExe::IsInitialized() const {
  return true;
}

void OrderExe::Swap(OrderExe* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OrderExe::InternalSwap(OrderExe* other) {
  using std::swap;
  swap(time_, other->time_);
  swap(code_, other->code_);
  swap(shares_, other->shares_);
  swap(orderid_, other->orderid_);
  swap(match_num_, other->match_num_);
  swap(print_, other->print_);
  swap(price_, other->price_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata OrderExe::GetMetadata() const {
  protobuf_tv_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tv_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OrderCancel::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OrderCancel::kCodeFieldNumber;
const int OrderCancel::kTimeFieldNumber;
const int OrderCancel::kOrderidFieldNumber;
const int OrderCancel::kSharesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OrderCancel::OrderCancel()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tv_2eproto::scc_info_OrderCancel.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:szfiu.OrderCancel)
}
OrderCancel::OrderCancel(const OrderCancel& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&time_, &from.time_,
    static_cast<size_t>(reinterpret_cast<char*>(&orderid_) -
    reinterpret_cast<char*>(&time_)) + sizeof(orderid_));
  // @@protoc_insertion_point(copy_constructor:szfiu.OrderCancel)
}

void OrderCancel::SharedCtor() {
  ::memset(&time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&orderid_) -
      reinterpret_cast<char*>(&time_)) + sizeof(orderid_));
}

OrderCancel::~OrderCancel() {
  // @@protoc_insertion_point(destructor:szfiu.OrderCancel)
  SharedDtor();
}

void OrderCancel::SharedDtor() {
}

void OrderCancel::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* OrderCancel::descriptor() {
  ::protobuf_tv_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tv_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OrderCancel& OrderCancel::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tv_2eproto::scc_info_OrderCancel.base);
  return *internal_default_instance();
}


void OrderCancel::Clear() {
// @@protoc_insertion_point(message_clear_start:szfiu.OrderCancel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&orderid_) -
      reinterpret_cast<char*>(&time_)) + sizeof(orderid_));
  _internal_metadata_.Clear();
}

bool OrderCancel::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:szfiu.OrderCancel)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint64 time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 orderid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &orderid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 shares = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &shares_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:szfiu.OrderCancel)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:szfiu.OrderCancel)
  return false;
#undef DO_
}

void OrderCancel::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:szfiu.OrderCancel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->code(), output);
  }

  // sint64 time = 2;
  if (this->time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(2, this->time(), output);
  }

  // int64 orderid = 3;
  if (this->orderid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->orderid(), output);
  }

  // int32 shares = 4;
  if (this->shares() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->shares(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:szfiu.OrderCancel)
}

::google::protobuf::uint8* OrderCancel::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:szfiu.OrderCancel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->code(), target);
  }

  // sint64 time = 2;
  if (this->time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(2, this->time(), target);
  }

  // int64 orderid = 3;
  if (this->orderid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->orderid(), target);
  }

  // int32 shares = 4;
  if (this->shares() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->shares(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szfiu.OrderCancel)
  return target;
}

size_t OrderCancel::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szfiu.OrderCancel)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // sint64 time = 2;
  if (this->time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->time());
  }

  // int32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->code());
  }

  // int32 shares = 4;
  if (this->shares() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->shares());
  }

  // int64 orderid = 3;
  if (this->orderid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->orderid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OrderCancel::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:szfiu.OrderCancel)
  GOOGLE_DCHECK_NE(&from, this);
  const OrderCancel* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OrderCancel>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:szfiu.OrderCancel)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:szfiu.OrderCancel)
    MergeFrom(*source);
  }
}

void OrderCancel::MergeFrom(const OrderCancel& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:szfiu.OrderCancel)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.time() != 0) {
    set_time(from.time());
  }
  if (from.code() != 0) {
    set_code(from.code());
  }
  if (from.shares() != 0) {
    set_shares(from.shares());
  }
  if (from.orderid() != 0) {
    set_orderid(from.orderid());
  }
}

void OrderCancel::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:szfiu.OrderCancel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OrderCancel::CopyFrom(const OrderCancel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szfiu.OrderCancel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OrderCancel::IsInitialized() const {
  return true;
}

void OrderCancel::Swap(OrderCancel* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OrderCancel::InternalSwap(OrderCancel* other) {
  using std::swap;
  swap(time_, other->time_);
  swap(code_, other->code_);
  swap(shares_, other->shares_);
  swap(orderid_, other->orderid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata OrderCancel::GetMetadata() const {
  protobuf_tv_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tv_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OrderDelete::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OrderDelete::kCodeFieldNumber;
const int OrderDelete::kTimeFieldNumber;
const int OrderDelete::kOrderidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OrderDelete::OrderDelete()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tv_2eproto::scc_info_OrderDelete.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:szfiu.OrderDelete)
}
OrderDelete::OrderDelete(const OrderDelete& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&time_, &from.time_,
    static_cast<size_t>(reinterpret_cast<char*>(&code_) -
    reinterpret_cast<char*>(&time_)) + sizeof(code_));
  // @@protoc_insertion_point(copy_constructor:szfiu.OrderDelete)
}

void OrderDelete::SharedCtor() {
  ::memset(&time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&code_) -
      reinterpret_cast<char*>(&time_)) + sizeof(code_));
}

OrderDelete::~OrderDelete() {
  // @@protoc_insertion_point(destructor:szfiu.OrderDelete)
  SharedDtor();
}

void OrderDelete::SharedDtor() {
}

void OrderDelete::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* OrderDelete::descriptor() {
  ::protobuf_tv_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tv_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OrderDelete& OrderDelete::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tv_2eproto::scc_info_OrderDelete.base);
  return *internal_default_instance();
}


void OrderDelete::Clear() {
// @@protoc_insertion_point(message_clear_start:szfiu.OrderDelete)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&code_) -
      reinterpret_cast<char*>(&time_)) + sizeof(code_));
  _internal_metadata_.Clear();
}

bool OrderDelete::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:szfiu.OrderDelete)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint64 time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 orderid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &orderid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:szfiu.OrderDelete)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:szfiu.OrderDelete)
  return false;
#undef DO_
}

void OrderDelete::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:szfiu.OrderDelete)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->code(), output);
  }

  // sint64 time = 2;
  if (this->time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(2, this->time(), output);
  }

  // int64 orderid = 3;
  if (this->orderid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->orderid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:szfiu.OrderDelete)
}

::google::protobuf::uint8* OrderDelete::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:szfiu.OrderDelete)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->code(), target);
  }

  // sint64 time = 2;
  if (this->time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(2, this->time(), target);
  }

  // int64 orderid = 3;
  if (this->orderid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->orderid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szfiu.OrderDelete)
  return target;
}

size_t OrderDelete::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szfiu.OrderDelete)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // sint64 time = 2;
  if (this->time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->time());
  }

  // int64 orderid = 3;
  if (this->orderid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->orderid());
  }

  // int32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OrderDelete::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:szfiu.OrderDelete)
  GOOGLE_DCHECK_NE(&from, this);
  const OrderDelete* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OrderDelete>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:szfiu.OrderDelete)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:szfiu.OrderDelete)
    MergeFrom(*source);
  }
}

void OrderDelete::MergeFrom(const OrderDelete& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:szfiu.OrderDelete)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.time() != 0) {
    set_time(from.time());
  }
  if (from.orderid() != 0) {
    set_orderid(from.orderid());
  }
  if (from.code() != 0) {
    set_code(from.code());
  }
}

void OrderDelete::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:szfiu.OrderDelete)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OrderDelete::CopyFrom(const OrderDelete& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szfiu.OrderDelete)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OrderDelete::IsInitialized() const {
  return true;
}

void OrderDelete::Swap(OrderDelete* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OrderDelete::InternalSwap(OrderDelete* other) {
  using std::swap;
  swap(time_, other->time_);
  swap(orderid_, other->orderid_);
  swap(code_, other->code_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata OrderDelete::GetMetadata() const {
  protobuf_tv_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tv_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OrderReplace::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OrderReplace::kCodeFieldNumber;
const int OrderReplace::kTimeFieldNumber;
const int OrderReplace::kOrderidFieldNumber;
const int OrderReplace::kNewidFieldNumber;
const int OrderReplace::kSharesFieldNumber;
const int OrderReplace::kPriceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OrderReplace::OrderReplace()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tv_2eproto::scc_info_OrderReplace.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:szfiu.OrderReplace)
}
OrderReplace::OrderReplace(const OrderReplace& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&time_, &from.time_,
    static_cast<size_t>(reinterpret_cast<char*>(&price_) -
    reinterpret_cast<char*>(&time_)) + sizeof(price_));
  // @@protoc_insertion_point(copy_constructor:szfiu.OrderReplace)
}

void OrderReplace::SharedCtor() {
  ::memset(&time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&price_) -
      reinterpret_cast<char*>(&time_)) + sizeof(price_));
}

OrderReplace::~OrderReplace() {
  // @@protoc_insertion_point(destructor:szfiu.OrderReplace)
  SharedDtor();
}

void OrderReplace::SharedDtor() {
}

void OrderReplace::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* OrderReplace::descriptor() {
  ::protobuf_tv_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tv_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OrderReplace& OrderReplace::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tv_2eproto::scc_info_OrderReplace.base);
  return *internal_default_instance();
}


void OrderReplace::Clear() {
// @@protoc_insertion_point(message_clear_start:szfiu.OrderReplace)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&price_) -
      reinterpret_cast<char*>(&time_)) + sizeof(price_));
  _internal_metadata_.Clear();
}

bool OrderReplace::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:szfiu.OrderReplace)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint64 time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 orderid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &orderid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 newid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &newid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 shares = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &shares_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 price = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &price_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:szfiu.OrderReplace)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:szfiu.OrderReplace)
  return false;
#undef DO_
}

void OrderReplace::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:szfiu.OrderReplace)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->code(), output);
  }

  // sint64 time = 2;
  if (this->time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(2, this->time(), output);
  }

  // int64 orderid = 3;
  if (this->orderid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->orderid(), output);
  }

  // int64 newid = 4;
  if (this->newid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->newid(), output);
  }

  // int32 shares = 5;
  if (this->shares() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->shares(), output);
  }

  // int32 price = 6;
  if (this->price() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->price(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:szfiu.OrderReplace)
}

::google::protobuf::uint8* OrderReplace::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:szfiu.OrderReplace)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->code(), target);
  }

  // sint64 time = 2;
  if (this->time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(2, this->time(), target);
  }

  // int64 orderid = 3;
  if (this->orderid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->orderid(), target);
  }

  // int64 newid = 4;
  if (this->newid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->newid(), target);
  }

  // int32 shares = 5;
  if (this->shares() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->shares(), target);
  }

  // int32 price = 6;
  if (this->price() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->price(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szfiu.OrderReplace)
  return target;
}

size_t OrderReplace::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szfiu.OrderReplace)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // sint64 time = 2;
  if (this->time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->time());
  }

  // int64 orderid = 3;
  if (this->orderid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->orderid());
  }

  // int32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->code());
  }

  // int32 shares = 5;
  if (this->shares() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->shares());
  }

  // int64 newid = 4;
  if (this->newid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->newid());
  }

  // int32 price = 6;
  if (this->price() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->price());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OrderReplace::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:szfiu.OrderReplace)
  GOOGLE_DCHECK_NE(&from, this);
  const OrderReplace* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OrderReplace>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:szfiu.OrderReplace)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:szfiu.OrderReplace)
    MergeFrom(*source);
  }
}

void OrderReplace::MergeFrom(const OrderReplace& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:szfiu.OrderReplace)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.time() != 0) {
    set_time(from.time());
  }
  if (from.orderid() != 0) {
    set_orderid(from.orderid());
  }
  if (from.code() != 0) {
    set_code(from.code());
  }
  if (from.shares() != 0) {
    set_shares(from.shares());
  }
  if (from.newid() != 0) {
    set_newid(from.newid());
  }
  if (from.price() != 0) {
    set_price(from.price());
  }
}

void OrderReplace::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:szfiu.OrderReplace)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OrderReplace::CopyFrom(const OrderReplace& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szfiu.OrderReplace)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OrderReplace::IsInitialized() const {
  return true;
}

void OrderReplace::Swap(OrderReplace* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OrderReplace::InternalSwap(OrderReplace* other) {
  using std::swap;
  swap(time_, other->time_);
  swap(orderid_, other->orderid_);
  swap(code_, other->code_);
  swap(shares_, other->shares_);
  swap(newid_, other->newid_);
  swap(price_, other->price_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata OrderReplace::GetMetadata() const {
  protobuf_tv_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tv_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace szfiu
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::szfiu::StockDefine* Arena::CreateMaybeMessage< ::szfiu::StockDefine >(Arena* arena) {
  return Arena::CreateInternal< ::szfiu::StockDefine >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::szfiu::SystemEvent* Arena::CreateMaybeMessage< ::szfiu::SystemEvent >(Arena* arena) {
  return Arena::CreateInternal< ::szfiu::SystemEvent >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::szfiu::CrossTrade* Arena::CreateMaybeMessage< ::szfiu::CrossTrade >(Arena* arena) {
  return Arena::CreateInternal< ::szfiu::CrossTrade >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::szfiu::OrderItem* Arena::CreateMaybeMessage< ::szfiu::OrderItem >(Arena* arena) {
  return Arena::CreateInternal< ::szfiu::OrderItem >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::szfiu::OrderList* Arena::CreateMaybeMessage< ::szfiu::OrderList >(Arena* arena) {
  return Arena::CreateInternal< ::szfiu::OrderList >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::szfiu::LevelList* Arena::CreateMaybeMessage< ::szfiu::LevelList >(Arena* arena) {
  return Arena::CreateInternal< ::szfiu::LevelList >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::szfiu::OrderImbalance* Arena::CreateMaybeMessage< ::szfiu::OrderImbalance >(Arena* arena) {
  return Arena::CreateInternal< ::szfiu::OrderImbalance >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::szfiu::MoneyFlow* Arena::CreateMaybeMessage< ::szfiu::MoneyFlow >(Arena* arena) {
  return Arena::CreateInternal< ::szfiu::MoneyFlow >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::szfiu::AddOrder* Arena::CreateMaybeMessage< ::szfiu::AddOrder >(Arena* arena) {
  return Arena::CreateInternal< ::szfiu::AddOrder >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::szfiu::OrderExe* Arena::CreateMaybeMessage< ::szfiu::OrderExe >(Arena* arena) {
  return Arena::CreateInternal< ::szfiu::OrderExe >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::szfiu::OrderCancel* Arena::CreateMaybeMessage< ::szfiu::OrderCancel >(Arena* arena) {
  return Arena::CreateInternal< ::szfiu::OrderCancel >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::szfiu::OrderDelete* Arena::CreateMaybeMessage< ::szfiu::OrderDelete >(Arena* arena) {
  return Arena::CreateInternal< ::szfiu::OrderDelete >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::szfiu::OrderReplace* Arena::CreateMaybeMessage< ::szfiu::OrderReplace >(Arena* arena) {
  return Arena::CreateInternal< ::szfiu::OrderReplace >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
