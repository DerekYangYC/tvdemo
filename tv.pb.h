// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tv.proto

#ifndef PROTOBUF_INCLUDED_tv_2eproto
#define PROTOBUF_INCLUDED_tv_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_tv_2eproto 

namespace protobuf_tv_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[13];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_tv_2eproto
namespace szfiu {
class AddOrder;
class AddOrderDefaultTypeInternal;
extern AddOrderDefaultTypeInternal _AddOrder_default_instance_;
class CrossTrade;
class CrossTradeDefaultTypeInternal;
extern CrossTradeDefaultTypeInternal _CrossTrade_default_instance_;
class LevelList;
class LevelListDefaultTypeInternal;
extern LevelListDefaultTypeInternal _LevelList_default_instance_;
class MoneyFlow;
class MoneyFlowDefaultTypeInternal;
extern MoneyFlowDefaultTypeInternal _MoneyFlow_default_instance_;
class OrderCancel;
class OrderCancelDefaultTypeInternal;
extern OrderCancelDefaultTypeInternal _OrderCancel_default_instance_;
class OrderDelete;
class OrderDeleteDefaultTypeInternal;
extern OrderDeleteDefaultTypeInternal _OrderDelete_default_instance_;
class OrderExe;
class OrderExeDefaultTypeInternal;
extern OrderExeDefaultTypeInternal _OrderExe_default_instance_;
class OrderImbalance;
class OrderImbalanceDefaultTypeInternal;
extern OrderImbalanceDefaultTypeInternal _OrderImbalance_default_instance_;
class OrderItem;
class OrderItemDefaultTypeInternal;
extern OrderItemDefaultTypeInternal _OrderItem_default_instance_;
class OrderList;
class OrderListDefaultTypeInternal;
extern OrderListDefaultTypeInternal _OrderList_default_instance_;
class OrderReplace;
class OrderReplaceDefaultTypeInternal;
extern OrderReplaceDefaultTypeInternal _OrderReplace_default_instance_;
class StockDefine;
class StockDefineDefaultTypeInternal;
extern StockDefineDefaultTypeInternal _StockDefine_default_instance_;
class SystemEvent;
class SystemEventDefaultTypeInternal;
extern SystemEventDefaultTypeInternal _SystemEvent_default_instance_;
}  // namespace szfiu
namespace google {
namespace protobuf {
template<> ::szfiu::AddOrder* Arena::CreateMaybeMessage<::szfiu::AddOrder>(Arena*);
template<> ::szfiu::CrossTrade* Arena::CreateMaybeMessage<::szfiu::CrossTrade>(Arena*);
template<> ::szfiu::LevelList* Arena::CreateMaybeMessage<::szfiu::LevelList>(Arena*);
template<> ::szfiu::MoneyFlow* Arena::CreateMaybeMessage<::szfiu::MoneyFlow>(Arena*);
template<> ::szfiu::OrderCancel* Arena::CreateMaybeMessage<::szfiu::OrderCancel>(Arena*);
template<> ::szfiu::OrderDelete* Arena::CreateMaybeMessage<::szfiu::OrderDelete>(Arena*);
template<> ::szfiu::OrderExe* Arena::CreateMaybeMessage<::szfiu::OrderExe>(Arena*);
template<> ::szfiu::OrderImbalance* Arena::CreateMaybeMessage<::szfiu::OrderImbalance>(Arena*);
template<> ::szfiu::OrderItem* Arena::CreateMaybeMessage<::szfiu::OrderItem>(Arena*);
template<> ::szfiu::OrderList* Arena::CreateMaybeMessage<::szfiu::OrderList>(Arena*);
template<> ::szfiu::OrderReplace* Arena::CreateMaybeMessage<::szfiu::OrderReplace>(Arena*);
template<> ::szfiu::StockDefine* Arena::CreateMaybeMessage<::szfiu::StockDefine>(Arena*);
template<> ::szfiu::SystemEvent* Arena::CreateMaybeMessage<::szfiu::SystemEvent>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace szfiu {

// ===================================================================

class StockDefine : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:szfiu.StockDefine) */ {
 public:
  StockDefine();
  virtual ~StockDefine();

  StockDefine(const StockDefine& from);

  inline StockDefine& operator=(const StockDefine& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StockDefine(StockDefine&& from) noexcept
    : StockDefine() {
    *this = ::std::move(from);
  }

  inline StockDefine& operator=(StockDefine&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const StockDefine& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StockDefine* internal_default_instance() {
    return reinterpret_cast<const StockDefine*>(
               &_StockDefine_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(StockDefine* other);
  friend void swap(StockDefine& a, StockDefine& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StockDefine* New() const final {
    return CreateMaybeMessage<StockDefine>(NULL);
  }

  StockDefine* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<StockDefine>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const StockDefine& from);
  void MergeFrom(const StockDefine& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StockDefine* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string symbol = 2;
  void clear_symbol();
  static const int kSymbolFieldNumber = 2;
  const ::std::string& symbol() const;
  void set_symbol(const ::std::string& value);
  #if LANG_CXX11
  void set_symbol(::std::string&& value);
  #endif
  void set_symbol(const char* value);
  void set_symbol(const char* value, size_t size);
  ::std::string* mutable_symbol();
  ::std::string* release_symbol();
  void set_allocated_symbol(::std::string* symbol);

  // string market = 3;
  void clear_market();
  static const int kMarketFieldNumber = 3;
  const ::std::string& market() const;
  void set_market(const ::std::string& value);
  #if LANG_CXX11
  void set_market(::std::string&& value);
  #endif
  void set_market(const char* value);
  void set_market(const char* value, size_t size);
  ::std::string* mutable_market();
  ::std::string* release_market();
  void set_allocated_market(::std::string* market);

  // string financial = 5;
  void clear_financial();
  static const int kFinancialFieldNumber = 5;
  const ::std::string& financial() const;
  void set_financial(const ::std::string& value);
  #if LANG_CXX11
  void set_financial(::std::string&& value);
  #endif
  void set_financial(const char* value);
  void set_financial(const char* value, size_t size);
  ::std::string* mutable_financial();
  ::std::string* release_financial();
  void set_allocated_financial(::std::string* financial);

  // string roundlotonly = 7;
  void clear_roundlotonly();
  static const int kRoundlotonlyFieldNumber = 7;
  const ::std::string& roundlotonly() const;
  void set_roundlotonly(const ::std::string& value);
  #if LANG_CXX11
  void set_roundlotonly(::std::string&& value);
  #endif
  void set_roundlotonly(const char* value);
  void set_roundlotonly(const char* value, size_t size);
  ::std::string* mutable_roundlotonly();
  ::std::string* release_roundlotonly();
  void set_allocated_roundlotonly(::std::string* roundlotonly);

  // string classification = 8;
  void clear_classification();
  static const int kClassificationFieldNumber = 8;
  const ::std::string& classification() const;
  void set_classification(const ::std::string& value);
  #if LANG_CXX11
  void set_classification(::std::string&& value);
  #endif
  void set_classification(const char* value);
  void set_classification(const char* value, size_t size);
  ::std::string* mutable_classification();
  ::std::string* release_classification();
  void set_allocated_classification(::std::string* classification);

  // string subtype = 9;
  void clear_subtype();
  static const int kSubtypeFieldNumber = 9;
  const ::std::string& subtype() const;
  void set_subtype(const ::std::string& value);
  #if LANG_CXX11
  void set_subtype(::std::string&& value);
  #endif
  void set_subtype(const char* value);
  void set_subtype(const char* value, size_t size);
  ::std::string* mutable_subtype();
  ::std::string* release_subtype();
  void set_allocated_subtype(::std::string* subtype);

  // string authenticity = 10;
  void clear_authenticity();
  static const int kAuthenticityFieldNumber = 10;
  const ::std::string& authenticity() const;
  void set_authenticity(const ::std::string& value);
  #if LANG_CXX11
  void set_authenticity(::std::string&& value);
  #endif
  void set_authenticity(const char* value);
  void set_authenticity(const char* value, size_t size);
  ::std::string* mutable_authenticity();
  ::std::string* release_authenticity();
  void set_allocated_authenticity(::std::string* authenticity);

  // string shortsale = 11;
  void clear_shortsale();
  static const int kShortsaleFieldNumber = 11;
  const ::std::string& shortsale() const;
  void set_shortsale(const ::std::string& value);
  #if LANG_CXX11
  void set_shortsale(::std::string&& value);
  #endif
  void set_shortsale(const char* value);
  void set_shortsale(const char* value, size_t size);
  ::std::string* mutable_shortsale();
  ::std::string* release_shortsale();
  void set_allocated_shortsale(::std::string* shortsale);

  // string ipo = 12;
  void clear_ipo();
  static const int kIpoFieldNumber = 12;
  const ::std::string& ipo() const;
  void set_ipo(const ::std::string& value);
  #if LANG_CXX11
  void set_ipo(::std::string&& value);
  #endif
  void set_ipo(const char* value);
  void set_ipo(const char* value, size_t size);
  ::std::string* mutable_ipo();
  ::std::string* release_ipo();
  void set_allocated_ipo(::std::string* ipo);

  // string luld = 13;
  void clear_luld();
  static const int kLuldFieldNumber = 13;
  const ::std::string& luld() const;
  void set_luld(const ::std::string& value);
  #if LANG_CXX11
  void set_luld(::std::string&& value);
  #endif
  void set_luld(const char* value);
  void set_luld(const char* value, size_t size);
  ::std::string* mutable_luld();
  ::std::string* release_luld();
  void set_allocated_luld(::std::string* luld);

  // string etp = 14;
  void clear_etp();
  static const int kEtpFieldNumber = 14;
  const ::std::string& etp() const;
  void set_etp(const ::std::string& value);
  #if LANG_CXX11
  void set_etp(::std::string&& value);
  #endif
  void set_etp(const char* value);
  void set_etp(const char* value, size_t size);
  ::std::string* mutable_etp();
  ::std::string* release_etp();
  void set_allocated_etp(::std::string* etp);

  // string inverse = 16;
  void clear_inverse();
  static const int kInverseFieldNumber = 16;
  const ::std::string& inverse() const;
  void set_inverse(const ::std::string& value);
  #if LANG_CXX11
  void set_inverse(::std::string&& value);
  #endif
  void set_inverse(const char* value);
  void set_inverse(const char* value, size_t size);
  ::std::string* mutable_inverse();
  ::std::string* release_inverse();
  void set_allocated_inverse(::std::string* inverse);

  // int64 code = 1;
  void clear_code();
  static const int kCodeFieldNumber = 1;
  ::google::protobuf::int64 code() const;
  void set_code(::google::protobuf::int64 value);

  // sint64 time = 4;
  void clear_time();
  static const int kTimeFieldNumber = 4;
  ::google::protobuf::int64 time() const;
  void set_time(::google::protobuf::int64 value);

  // int32 roundlotsize = 6;
  void clear_roundlotsize();
  static const int kRoundlotsizeFieldNumber = 6;
  ::google::protobuf::int32 roundlotsize() const;
  void set_roundlotsize(::google::protobuf::int32 value);

  // int32 etplevel = 15;
  void clear_etplevel();
  static const int kEtplevelFieldNumber = 15;
  ::google::protobuf::int32 etplevel() const;
  void set_etplevel(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:szfiu.StockDefine)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr symbol_;
  ::google::protobuf::internal::ArenaStringPtr market_;
  ::google::protobuf::internal::ArenaStringPtr financial_;
  ::google::protobuf::internal::ArenaStringPtr roundlotonly_;
  ::google::protobuf::internal::ArenaStringPtr classification_;
  ::google::protobuf::internal::ArenaStringPtr subtype_;
  ::google::protobuf::internal::ArenaStringPtr authenticity_;
  ::google::protobuf::internal::ArenaStringPtr shortsale_;
  ::google::protobuf::internal::ArenaStringPtr ipo_;
  ::google::protobuf::internal::ArenaStringPtr luld_;
  ::google::protobuf::internal::ArenaStringPtr etp_;
  ::google::protobuf::internal::ArenaStringPtr inverse_;
  ::google::protobuf::int64 code_;
  ::google::protobuf::int64 time_;
  ::google::protobuf::int32 roundlotsize_;
  ::google::protobuf::int32 etplevel_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_tv_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SystemEvent : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:szfiu.SystemEvent) */ {
 public:
  SystemEvent();
  virtual ~SystemEvent();

  SystemEvent(const SystemEvent& from);

  inline SystemEvent& operator=(const SystemEvent& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SystemEvent(SystemEvent&& from) noexcept
    : SystemEvent() {
    *this = ::std::move(from);
  }

  inline SystemEvent& operator=(SystemEvent&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SystemEvent& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SystemEvent* internal_default_instance() {
    return reinterpret_cast<const SystemEvent*>(
               &_SystemEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(SystemEvent* other);
  friend void swap(SystemEvent& a, SystemEvent& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SystemEvent* New() const final {
    return CreateMaybeMessage<SystemEvent>(NULL);
  }

  SystemEvent* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SystemEvent>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SystemEvent& from);
  void MergeFrom(const SystemEvent& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SystemEvent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // sint64 time = 2;
  void clear_time();
  static const int kTimeFieldNumber = 2;
  ::google::protobuf::int64 time() const;
  void set_time(::google::protobuf::int64 value);

  // int32 event = 1;
  void clear_event();
  static const int kEventFieldNumber = 1;
  ::google::protobuf::int32 event() const;
  void set_event(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:szfiu.SystemEvent)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 time_;
  ::google::protobuf::int32 event_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_tv_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CrossTrade : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:szfiu.CrossTrade) */ {
 public:
  CrossTrade();
  virtual ~CrossTrade();

  CrossTrade(const CrossTrade& from);

  inline CrossTrade& operator=(const CrossTrade& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CrossTrade(CrossTrade&& from) noexcept
    : CrossTrade() {
    *this = ::std::move(from);
  }

  inline CrossTrade& operator=(CrossTrade&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CrossTrade& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CrossTrade* internal_default_instance() {
    return reinterpret_cast<const CrossTrade*>(
               &_CrossTrade_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(CrossTrade* other);
  friend void swap(CrossTrade& a, CrossTrade& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CrossTrade* New() const final {
    return CreateMaybeMessage<CrossTrade>(NULL);
  }

  CrossTrade* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CrossTrade>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CrossTrade& from);
  void MergeFrom(const CrossTrade& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CrossTrade* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string symbol = 1;
  void clear_symbol();
  static const int kSymbolFieldNumber = 1;
  const ::std::string& symbol() const;
  void set_symbol(const ::std::string& value);
  #if LANG_CXX11
  void set_symbol(::std::string&& value);
  #endif
  void set_symbol(const char* value);
  void set_symbol(const char* value, size_t size);
  ::std::string* mutable_symbol();
  ::std::string* release_symbol();
  void set_allocated_symbol(::std::string* symbol);

  // sint64 time = 2;
  void clear_time();
  static const int kTimeFieldNumber = 2;
  ::google::protobuf::int64 time() const;
  void set_time(::google::protobuf::int64 value);

  // int64 price = 3;
  void clear_price();
  static const int kPriceFieldNumber = 3;
  ::google::protobuf::int64 price() const;
  void set_price(::google::protobuf::int64 value);

  // int64 shares = 4;
  void clear_shares();
  static const int kSharesFieldNumber = 4;
  ::google::protobuf::int64 shares() const;
  void set_shares(::google::protobuf::int64 value);

  // int64 code = 6;
  void clear_code();
  static const int kCodeFieldNumber = 6;
  ::google::protobuf::int64 code() const;
  void set_code(::google::protobuf::int64 value);

  // int32 type = 5;
  void clear_type();
  static const int kTypeFieldNumber = 5;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:szfiu.CrossTrade)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr symbol_;
  ::google::protobuf::int64 time_;
  ::google::protobuf::int64 price_;
  ::google::protobuf::int64 shares_;
  ::google::protobuf::int64 code_;
  ::google::protobuf::int32 type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_tv_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class OrderItem : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:szfiu.OrderItem) */ {
 public:
  OrderItem();
  virtual ~OrderItem();

  OrderItem(const OrderItem& from);

  inline OrderItem& operator=(const OrderItem& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OrderItem(OrderItem&& from) noexcept
    : OrderItem() {
    *this = ::std::move(from);
  }

  inline OrderItem& operator=(OrderItem&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const OrderItem& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OrderItem* internal_default_instance() {
    return reinterpret_cast<const OrderItem*>(
               &_OrderItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(OrderItem* other);
  friend void swap(OrderItem& a, OrderItem& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OrderItem* New() const final {
    return CreateMaybeMessage<OrderItem>(NULL);
  }

  OrderItem* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<OrderItem>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const OrderItem& from);
  void MergeFrom(const OrderItem& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OrderItem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string mpid = 3;
  void clear_mpid();
  static const int kMpidFieldNumber = 3;
  const ::std::string& mpid() const;
  void set_mpid(const ::std::string& value);
  #if LANG_CXX11
  void set_mpid(::std::string&& value);
  #endif
  void set_mpid(const char* value);
  void set_mpid(const char* value, size_t size);
  ::std::string* mutable_mpid();
  ::std::string* release_mpid();
  void set_allocated_mpid(::std::string* mpid);

  // int64 price = 1;
  void clear_price();
  static const int kPriceFieldNumber = 1;
  ::google::protobuf::int64 price() const;
  void set_price(::google::protobuf::int64 value);

  // int32 qty = 2;
  void clear_qty();
  static const int kQtyFieldNumber = 2;
  ::google::protobuf::int32 qty() const;
  void set_qty(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:szfiu.OrderItem)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr mpid_;
  ::google::protobuf::int64 price_;
  ::google::protobuf::int32 qty_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_tv_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class OrderList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:szfiu.OrderList) */ {
 public:
  OrderList();
  virtual ~OrderList();

  OrderList(const OrderList& from);

  inline OrderList& operator=(const OrderList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OrderList(OrderList&& from) noexcept
    : OrderList() {
    *this = ::std::move(from);
  }

  inline OrderList& operator=(OrderList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const OrderList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OrderList* internal_default_instance() {
    return reinterpret_cast<const OrderList*>(
               &_OrderList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(OrderList* other);
  friend void swap(OrderList& a, OrderList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OrderList* New() const final {
    return CreateMaybeMessage<OrderList>(NULL);
  }

  OrderList* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<OrderList>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const OrderList& from);
  void MergeFrom(const OrderList& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OrderList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .szfiu.OrderItem bidlist = 3;
  int bidlist_size() const;
  void clear_bidlist();
  static const int kBidlistFieldNumber = 3;
  ::szfiu::OrderItem* mutable_bidlist(int index);
  ::google::protobuf::RepeatedPtrField< ::szfiu::OrderItem >*
      mutable_bidlist();
  const ::szfiu::OrderItem& bidlist(int index) const;
  ::szfiu::OrderItem* add_bidlist();
  const ::google::protobuf::RepeatedPtrField< ::szfiu::OrderItem >&
      bidlist() const;

  // repeated .szfiu.OrderItem asklist = 4;
  int asklist_size() const;
  void clear_asklist();
  static const int kAsklistFieldNumber = 4;
  ::szfiu::OrderItem* mutable_asklist(int index);
  ::google::protobuf::RepeatedPtrField< ::szfiu::OrderItem >*
      mutable_asklist();
  const ::szfiu::OrderItem& asklist(int index) const;
  ::szfiu::OrderItem* add_asklist();
  const ::google::protobuf::RepeatedPtrField< ::szfiu::OrderItem >&
      asklist() const;

  // string symbol = 1;
  void clear_symbol();
  static const int kSymbolFieldNumber = 1;
  const ::std::string& symbol() const;
  void set_symbol(const ::std::string& value);
  #if LANG_CXX11
  void set_symbol(::std::string&& value);
  #endif
  void set_symbol(const char* value);
  void set_symbol(const char* value, size_t size);
  ::std::string* mutable_symbol();
  ::std::string* release_symbol();
  void set_allocated_symbol(::std::string* symbol);

  // sint64 time = 2;
  void clear_time();
  static const int kTimeFieldNumber = 2;
  ::google::protobuf::int64 time() const;
  void set_time(::google::protobuf::int64 value);

  // int64 code = 5;
  void clear_code();
  static const int kCodeFieldNumber = 5;
  ::google::protobuf::int64 code() const;
  void set_code(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:szfiu.OrderList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::szfiu::OrderItem > bidlist_;
  ::google::protobuf::RepeatedPtrField< ::szfiu::OrderItem > asklist_;
  ::google::protobuf::internal::ArenaStringPtr symbol_;
  ::google::protobuf::int64 time_;
  ::google::protobuf::int64 code_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_tv_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LevelList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:szfiu.LevelList) */ {
 public:
  LevelList();
  virtual ~LevelList();

  LevelList(const LevelList& from);

  inline LevelList& operator=(const LevelList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LevelList(LevelList&& from) noexcept
    : LevelList() {
    *this = ::std::move(from);
  }

  inline LevelList& operator=(LevelList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LevelList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LevelList* internal_default_instance() {
    return reinterpret_cast<const LevelList*>(
               &_LevelList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(LevelList* other);
  friend void swap(LevelList& a, LevelList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LevelList* New() const final {
    return CreateMaybeMessage<LevelList>(NULL);
  }

  LevelList* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<LevelList>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const LevelList& from);
  void MergeFrom(const LevelList& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LevelList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .szfiu.OrderItem bidlist = 3;
  int bidlist_size() const;
  void clear_bidlist();
  static const int kBidlistFieldNumber = 3;
  ::szfiu::OrderItem* mutable_bidlist(int index);
  ::google::protobuf::RepeatedPtrField< ::szfiu::OrderItem >*
      mutable_bidlist();
  const ::szfiu::OrderItem& bidlist(int index) const;
  ::szfiu::OrderItem* add_bidlist();
  const ::google::protobuf::RepeatedPtrField< ::szfiu::OrderItem >&
      bidlist() const;

  // repeated .szfiu.OrderItem asklist = 4;
  int asklist_size() const;
  void clear_asklist();
  static const int kAsklistFieldNumber = 4;
  ::szfiu::OrderItem* mutable_asklist(int index);
  ::google::protobuf::RepeatedPtrField< ::szfiu::OrderItem >*
      mutable_asklist();
  const ::szfiu::OrderItem& asklist(int index) const;
  ::szfiu::OrderItem* add_asklist();
  const ::google::protobuf::RepeatedPtrField< ::szfiu::OrderItem >&
      asklist() const;

  // string symbol = 1;
  void clear_symbol();
  static const int kSymbolFieldNumber = 1;
  const ::std::string& symbol() const;
  void set_symbol(const ::std::string& value);
  #if LANG_CXX11
  void set_symbol(::std::string&& value);
  #endif
  void set_symbol(const char* value);
  void set_symbol(const char* value, size_t size);
  ::std::string* mutable_symbol();
  ::std::string* release_symbol();
  void set_allocated_symbol(::std::string* symbol);

  // sint64 time = 2;
  void clear_time();
  static const int kTimeFieldNumber = 2;
  ::google::protobuf::int64 time() const;
  void set_time(::google::protobuf::int64 value);

  // int64 code = 5;
  void clear_code();
  static const int kCodeFieldNumber = 5;
  ::google::protobuf::int64 code() const;
  void set_code(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:szfiu.LevelList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::szfiu::OrderItem > bidlist_;
  ::google::protobuf::RepeatedPtrField< ::szfiu::OrderItem > asklist_;
  ::google::protobuf::internal::ArenaStringPtr symbol_;
  ::google::protobuf::int64 time_;
  ::google::protobuf::int64 code_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_tv_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class OrderImbalance : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:szfiu.OrderImbalance) */ {
 public:
  OrderImbalance();
  virtual ~OrderImbalance();

  OrderImbalance(const OrderImbalance& from);

  inline OrderImbalance& operator=(const OrderImbalance& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OrderImbalance(OrderImbalance&& from) noexcept
    : OrderImbalance() {
    *this = ::std::move(from);
  }

  inline OrderImbalance& operator=(OrderImbalance&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const OrderImbalance& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OrderImbalance* internal_default_instance() {
    return reinterpret_cast<const OrderImbalance*>(
               &_OrderImbalance_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(OrderImbalance* other);
  friend void swap(OrderImbalance& a, OrderImbalance& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OrderImbalance* New() const final {
    return CreateMaybeMessage<OrderImbalance>(NULL);
  }

  OrderImbalance* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<OrderImbalance>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const OrderImbalance& from);
  void MergeFrom(const OrderImbalance& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OrderImbalance* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string symbol = 1;
  void clear_symbol();
  static const int kSymbolFieldNumber = 1;
  const ::std::string& symbol() const;
  void set_symbol(const ::std::string& value);
  #if LANG_CXX11
  void set_symbol(::std::string&& value);
  #endif
  void set_symbol(const char* value);
  void set_symbol(const char* value, size_t size);
  ::std::string* mutable_symbol();
  ::std::string* release_symbol();
  void set_allocated_symbol(::std::string* symbol);

  // string dir = 5;
  void clear_dir();
  static const int kDirFieldNumber = 5;
  const ::std::string& dir() const;
  void set_dir(const ::std::string& value);
  #if LANG_CXX11
  void set_dir(::std::string&& value);
  #endif
  void set_dir(const char* value);
  void set_dir(const char* value, size_t size);
  ::std::string* mutable_dir();
  ::std::string* release_dir();
  void set_allocated_dir(::std::string* dir);

  // string cross_type = 9;
  void clear_cross_type();
  static const int kCrossTypeFieldNumber = 9;
  const ::std::string& cross_type() const;
  void set_cross_type(const ::std::string& value);
  #if LANG_CXX11
  void set_cross_type(::std::string&& value);
  #endif
  void set_cross_type(const char* value);
  void set_cross_type(const char* value, size_t size);
  ::std::string* mutable_cross_type();
  ::std::string* release_cross_type();
  void set_allocated_cross_type(::std::string* cross_type);

  // string varitation = 10;
  void clear_varitation();
  static const int kVaritationFieldNumber = 10;
  const ::std::string& varitation() const;
  void set_varitation(const ::std::string& value);
  #if LANG_CXX11
  void set_varitation(::std::string&& value);
  #endif
  void set_varitation(const char* value);
  void set_varitation(const char* value, size_t size);
  ::std::string* mutable_varitation();
  ::std::string* release_varitation();
  void set_allocated_varitation(::std::string* varitation);

  // sint64 time = 2;
  void clear_time();
  static const int kTimeFieldNumber = 2;
  ::google::protobuf::int64 time() const;
  void set_time(::google::protobuf::int64 value);

  // int64 paried_shares = 3;
  void clear_paried_shares();
  static const int kPariedSharesFieldNumber = 3;
  ::google::protobuf::int64 paried_shares() const;
  void set_paried_shares(::google::protobuf::int64 value);

  // int64 imbalance = 4;
  void clear_imbalance();
  static const int kImbalanceFieldNumber = 4;
  ::google::protobuf::int64 imbalance() const;
  void set_imbalance(::google::protobuf::int64 value);

  // int32 far_price = 6;
  void clear_far_price();
  static const int kFarPriceFieldNumber = 6;
  ::google::protobuf::int32 far_price() const;
  void set_far_price(::google::protobuf::int32 value);

  // int32 near_price = 7;
  void clear_near_price();
  static const int kNearPriceFieldNumber = 7;
  ::google::protobuf::int32 near_price() const;
  void set_near_price(::google::protobuf::int32 value);

  // int64 code = 11;
  void clear_code();
  static const int kCodeFieldNumber = 11;
  ::google::protobuf::int64 code() const;
  void set_code(::google::protobuf::int64 value);

  // int32 ref_price = 8;
  void clear_ref_price();
  static const int kRefPriceFieldNumber = 8;
  ::google::protobuf::int32 ref_price() const;
  void set_ref_price(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:szfiu.OrderImbalance)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr symbol_;
  ::google::protobuf::internal::ArenaStringPtr dir_;
  ::google::protobuf::internal::ArenaStringPtr cross_type_;
  ::google::protobuf::internal::ArenaStringPtr varitation_;
  ::google::protobuf::int64 time_;
  ::google::protobuf::int64 paried_shares_;
  ::google::protobuf::int64 imbalance_;
  ::google::protobuf::int32 far_price_;
  ::google::protobuf::int32 near_price_;
  ::google::protobuf::int64 code_;
  ::google::protobuf::int32 ref_price_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_tv_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MoneyFlow : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:szfiu.MoneyFlow) */ {
 public:
  MoneyFlow();
  virtual ~MoneyFlow();

  MoneyFlow(const MoneyFlow& from);

  inline MoneyFlow& operator=(const MoneyFlow& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MoneyFlow(MoneyFlow&& from) noexcept
    : MoneyFlow() {
    *this = ::std::move(from);
  }

  inline MoneyFlow& operator=(MoneyFlow&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MoneyFlow& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MoneyFlow* internal_default_instance() {
    return reinterpret_cast<const MoneyFlow*>(
               &_MoneyFlow_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(MoneyFlow* other);
  friend void swap(MoneyFlow& a, MoneyFlow& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MoneyFlow* New() const final {
    return CreateMaybeMessage<MoneyFlow>(NULL);
  }

  MoneyFlow* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MoneyFlow>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MoneyFlow& from);
  void MergeFrom(const MoneyFlow& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MoneyFlow* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string symbol = 1;
  void clear_symbol();
  static const int kSymbolFieldNumber = 1;
  const ::std::string& symbol() const;
  void set_symbol(const ::std::string& value);
  #if LANG_CXX11
  void set_symbol(::std::string&& value);
  #endif
  void set_symbol(const char* value);
  void set_symbol(const char* value, size_t size);
  ::std::string* mutable_symbol();
  ::std::string* release_symbol();
  void set_allocated_symbol(::std::string* symbol);

  // string dir = 5;
  void clear_dir();
  static const int kDirFieldNumber = 5;
  const ::std::string& dir() const;
  void set_dir(const ::std::string& value);
  #if LANG_CXX11
  void set_dir(::std::string&& value);
  #endif
  void set_dir(const char* value);
  void set_dir(const char* value, size_t size);
  ::std::string* mutable_dir();
  ::std::string* release_dir();
  void set_allocated_dir(::std::string* dir);

  // sint64 time = 2;
  void clear_time();
  static const int kTimeFieldNumber = 2;
  ::google::protobuf::int64 time() const;
  void set_time(::google::protobuf::int64 value);

  // int64 price = 3;
  void clear_price();
  static const int kPriceFieldNumber = 3;
  ::google::protobuf::int64 price() const;
  void set_price(::google::protobuf::int64 value);

  // int64 qty = 4;
  void clear_qty();
  static const int kQtyFieldNumber = 4;
  ::google::protobuf::int64 qty() const;
  void set_qty(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:szfiu.MoneyFlow)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr symbol_;
  ::google::protobuf::internal::ArenaStringPtr dir_;
  ::google::protobuf::int64 time_;
  ::google::protobuf::int64 price_;
  ::google::protobuf::int64 qty_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_tv_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AddOrder : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:szfiu.AddOrder) */ {
 public:
  AddOrder();
  virtual ~AddOrder();

  AddOrder(const AddOrder& from);

  inline AddOrder& operator=(const AddOrder& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AddOrder(AddOrder&& from) noexcept
    : AddOrder() {
    *this = ::std::move(from);
  }

  inline AddOrder& operator=(AddOrder&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AddOrder& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AddOrder* internal_default_instance() {
    return reinterpret_cast<const AddOrder*>(
               &_AddOrder_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(AddOrder* other);
  friend void swap(AddOrder& a, AddOrder& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AddOrder* New() const final {
    return CreateMaybeMessage<AddOrder>(NULL);
  }

  AddOrder* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AddOrder>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AddOrder& from);
  void MergeFrom(const AddOrder& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AddOrder* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string attr = 7;
  void clear_attr();
  static const int kAttrFieldNumber = 7;
  const ::std::string& attr() const;
  void set_attr(const ::std::string& value);
  #if LANG_CXX11
  void set_attr(::std::string&& value);
  #endif
  void set_attr(const char* value);
  void set_attr(const char* value, size_t size);
  ::std::string* mutable_attr();
  ::std::string* release_attr();
  void set_allocated_attr(::std::string* attr);

  // sint64 time = 2;
  void clear_time();
  static const int kTimeFieldNumber = 2;
  ::google::protobuf::int64 time() const;
  void set_time(::google::protobuf::int64 value);

  // int32 code = 1;
  void clear_code();
  static const int kCodeFieldNumber = 1;
  ::google::protobuf::int32 code() const;
  void set_code(::google::protobuf::int32 value);

  // int32 side = 4;
  void clear_side();
  static const int kSideFieldNumber = 4;
  ::google::protobuf::int32 side() const;
  void set_side(::google::protobuf::int32 value);

  // int64 orderid = 3;
  void clear_orderid();
  static const int kOrderidFieldNumber = 3;
  ::google::protobuf::int64 orderid() const;
  void set_orderid(::google::protobuf::int64 value);

  // int32 price = 5;
  void clear_price();
  static const int kPriceFieldNumber = 5;
  ::google::protobuf::int32 price() const;
  void set_price(::google::protobuf::int32 value);

  // int32 shares = 6;
  void clear_shares();
  static const int kSharesFieldNumber = 6;
  ::google::protobuf::int32 shares() const;
  void set_shares(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:szfiu.AddOrder)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr attr_;
  ::google::protobuf::int64 time_;
  ::google::protobuf::int32 code_;
  ::google::protobuf::int32 side_;
  ::google::protobuf::int64 orderid_;
  ::google::protobuf::int32 price_;
  ::google::protobuf::int32 shares_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_tv_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class OrderExe : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:szfiu.OrderExe) */ {
 public:
  OrderExe();
  virtual ~OrderExe();

  OrderExe(const OrderExe& from);

  inline OrderExe& operator=(const OrderExe& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OrderExe(OrderExe&& from) noexcept
    : OrderExe() {
    *this = ::std::move(from);
  }

  inline OrderExe& operator=(OrderExe&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const OrderExe& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OrderExe* internal_default_instance() {
    return reinterpret_cast<const OrderExe*>(
               &_OrderExe_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(OrderExe* other);
  friend void swap(OrderExe& a, OrderExe& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OrderExe* New() const final {
    return CreateMaybeMessage<OrderExe>(NULL);
  }

  OrderExe* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<OrderExe>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const OrderExe& from);
  void MergeFrom(const OrderExe& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OrderExe* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // sint64 time = 2;
  void clear_time();
  static const int kTimeFieldNumber = 2;
  ::google::protobuf::int64 time() const;
  void set_time(::google::protobuf::int64 value);

  // int32 code = 1;
  void clear_code();
  static const int kCodeFieldNumber = 1;
  ::google::protobuf::int32 code() const;
  void set_code(::google::protobuf::int32 value);

  // int32 shares = 4;
  void clear_shares();
  static const int kSharesFieldNumber = 4;
  ::google::protobuf::int32 shares() const;
  void set_shares(::google::protobuf::int32 value);

  // int64 orderid = 3;
  void clear_orderid();
  static const int kOrderidFieldNumber = 3;
  ::google::protobuf::int64 orderid() const;
  void set_orderid(::google::protobuf::int64 value);

  // int64 match_num = 5;
  void clear_match_num();
  static const int kMatchNumFieldNumber = 5;
  ::google::protobuf::int64 match_num() const;
  void set_match_num(::google::protobuf::int64 value);

  // int32 print = 6;
  void clear_print();
  static const int kPrintFieldNumber = 6;
  ::google::protobuf::int32 print() const;
  void set_print(::google::protobuf::int32 value);

  // int32 price = 7;
  void clear_price();
  static const int kPriceFieldNumber = 7;
  ::google::protobuf::int32 price() const;
  void set_price(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:szfiu.OrderExe)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 time_;
  ::google::protobuf::int32 code_;
  ::google::protobuf::int32 shares_;
  ::google::protobuf::int64 orderid_;
  ::google::protobuf::int64 match_num_;
  ::google::protobuf::int32 print_;
  ::google::protobuf::int32 price_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_tv_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class OrderCancel : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:szfiu.OrderCancel) */ {
 public:
  OrderCancel();
  virtual ~OrderCancel();

  OrderCancel(const OrderCancel& from);

  inline OrderCancel& operator=(const OrderCancel& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OrderCancel(OrderCancel&& from) noexcept
    : OrderCancel() {
    *this = ::std::move(from);
  }

  inline OrderCancel& operator=(OrderCancel&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const OrderCancel& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OrderCancel* internal_default_instance() {
    return reinterpret_cast<const OrderCancel*>(
               &_OrderCancel_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(OrderCancel* other);
  friend void swap(OrderCancel& a, OrderCancel& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OrderCancel* New() const final {
    return CreateMaybeMessage<OrderCancel>(NULL);
  }

  OrderCancel* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<OrderCancel>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const OrderCancel& from);
  void MergeFrom(const OrderCancel& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OrderCancel* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // sint64 time = 2;
  void clear_time();
  static const int kTimeFieldNumber = 2;
  ::google::protobuf::int64 time() const;
  void set_time(::google::protobuf::int64 value);

  // int32 code = 1;
  void clear_code();
  static const int kCodeFieldNumber = 1;
  ::google::protobuf::int32 code() const;
  void set_code(::google::protobuf::int32 value);

  // int32 shares = 4;
  void clear_shares();
  static const int kSharesFieldNumber = 4;
  ::google::protobuf::int32 shares() const;
  void set_shares(::google::protobuf::int32 value);

  // int64 orderid = 3;
  void clear_orderid();
  static const int kOrderidFieldNumber = 3;
  ::google::protobuf::int64 orderid() const;
  void set_orderid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:szfiu.OrderCancel)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 time_;
  ::google::protobuf::int32 code_;
  ::google::protobuf::int32 shares_;
  ::google::protobuf::int64 orderid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_tv_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class OrderDelete : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:szfiu.OrderDelete) */ {
 public:
  OrderDelete();
  virtual ~OrderDelete();

  OrderDelete(const OrderDelete& from);

  inline OrderDelete& operator=(const OrderDelete& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OrderDelete(OrderDelete&& from) noexcept
    : OrderDelete() {
    *this = ::std::move(from);
  }

  inline OrderDelete& operator=(OrderDelete&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const OrderDelete& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OrderDelete* internal_default_instance() {
    return reinterpret_cast<const OrderDelete*>(
               &_OrderDelete_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(OrderDelete* other);
  friend void swap(OrderDelete& a, OrderDelete& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OrderDelete* New() const final {
    return CreateMaybeMessage<OrderDelete>(NULL);
  }

  OrderDelete* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<OrderDelete>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const OrderDelete& from);
  void MergeFrom(const OrderDelete& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OrderDelete* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // sint64 time = 2;
  void clear_time();
  static const int kTimeFieldNumber = 2;
  ::google::protobuf::int64 time() const;
  void set_time(::google::protobuf::int64 value);

  // int64 orderid = 3;
  void clear_orderid();
  static const int kOrderidFieldNumber = 3;
  ::google::protobuf::int64 orderid() const;
  void set_orderid(::google::protobuf::int64 value);

  // int32 code = 1;
  void clear_code();
  static const int kCodeFieldNumber = 1;
  ::google::protobuf::int32 code() const;
  void set_code(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:szfiu.OrderDelete)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 time_;
  ::google::protobuf::int64 orderid_;
  ::google::protobuf::int32 code_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_tv_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class OrderReplace : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:szfiu.OrderReplace) */ {
 public:
  OrderReplace();
  virtual ~OrderReplace();

  OrderReplace(const OrderReplace& from);

  inline OrderReplace& operator=(const OrderReplace& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OrderReplace(OrderReplace&& from) noexcept
    : OrderReplace() {
    *this = ::std::move(from);
  }

  inline OrderReplace& operator=(OrderReplace&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const OrderReplace& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OrderReplace* internal_default_instance() {
    return reinterpret_cast<const OrderReplace*>(
               &_OrderReplace_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void Swap(OrderReplace* other);
  friend void swap(OrderReplace& a, OrderReplace& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OrderReplace* New() const final {
    return CreateMaybeMessage<OrderReplace>(NULL);
  }

  OrderReplace* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<OrderReplace>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const OrderReplace& from);
  void MergeFrom(const OrderReplace& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OrderReplace* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // sint64 time = 2;
  void clear_time();
  static const int kTimeFieldNumber = 2;
  ::google::protobuf::int64 time() const;
  void set_time(::google::protobuf::int64 value);

  // int64 orderid = 3;
  void clear_orderid();
  static const int kOrderidFieldNumber = 3;
  ::google::protobuf::int64 orderid() const;
  void set_orderid(::google::protobuf::int64 value);

  // int32 code = 1;
  void clear_code();
  static const int kCodeFieldNumber = 1;
  ::google::protobuf::int32 code() const;
  void set_code(::google::protobuf::int32 value);

  // int32 shares = 5;
  void clear_shares();
  static const int kSharesFieldNumber = 5;
  ::google::protobuf::int32 shares() const;
  void set_shares(::google::protobuf::int32 value);

  // int64 newid = 4;
  void clear_newid();
  static const int kNewidFieldNumber = 4;
  ::google::protobuf::int64 newid() const;
  void set_newid(::google::protobuf::int64 value);

  // int32 price = 6;
  void clear_price();
  static const int kPriceFieldNumber = 6;
  ::google::protobuf::int32 price() const;
  void set_price(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:szfiu.OrderReplace)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 time_;
  ::google::protobuf::int64 orderid_;
  ::google::protobuf::int32 code_;
  ::google::protobuf::int32 shares_;
  ::google::protobuf::int64 newid_;
  ::google::protobuf::int32 price_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_tv_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// StockDefine

// int64 code = 1;
inline void StockDefine::clear_code() {
  code_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 StockDefine::code() const {
  // @@protoc_insertion_point(field_get:szfiu.StockDefine.code)
  return code_;
}
inline void StockDefine::set_code(::google::protobuf::int64 value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:szfiu.StockDefine.code)
}

// string symbol = 2;
inline void StockDefine::clear_symbol() {
  symbol_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StockDefine::symbol() const {
  // @@protoc_insertion_point(field_get:szfiu.StockDefine.symbol)
  return symbol_.GetNoArena();
}
inline void StockDefine::set_symbol(const ::std::string& value) {
  
  symbol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:szfiu.StockDefine.symbol)
}
#if LANG_CXX11
inline void StockDefine::set_symbol(::std::string&& value) {
  
  symbol_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:szfiu.StockDefine.symbol)
}
#endif
inline void StockDefine::set_symbol(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  symbol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:szfiu.StockDefine.symbol)
}
inline void StockDefine::set_symbol(const char* value, size_t size) {
  
  symbol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:szfiu.StockDefine.symbol)
}
inline ::std::string* StockDefine::mutable_symbol() {
  
  // @@protoc_insertion_point(field_mutable:szfiu.StockDefine.symbol)
  return symbol_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StockDefine::release_symbol() {
  // @@protoc_insertion_point(field_release:szfiu.StockDefine.symbol)
  
  return symbol_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StockDefine::set_allocated_symbol(::std::string* symbol) {
  if (symbol != NULL) {
    
  } else {
    
  }
  symbol_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), symbol);
  // @@protoc_insertion_point(field_set_allocated:szfiu.StockDefine.symbol)
}

// string market = 3;
inline void StockDefine::clear_market() {
  market_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StockDefine::market() const {
  // @@protoc_insertion_point(field_get:szfiu.StockDefine.market)
  return market_.GetNoArena();
}
inline void StockDefine::set_market(const ::std::string& value) {
  
  market_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:szfiu.StockDefine.market)
}
#if LANG_CXX11
inline void StockDefine::set_market(::std::string&& value) {
  
  market_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:szfiu.StockDefine.market)
}
#endif
inline void StockDefine::set_market(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  market_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:szfiu.StockDefine.market)
}
inline void StockDefine::set_market(const char* value, size_t size) {
  
  market_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:szfiu.StockDefine.market)
}
inline ::std::string* StockDefine::mutable_market() {
  
  // @@protoc_insertion_point(field_mutable:szfiu.StockDefine.market)
  return market_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StockDefine::release_market() {
  // @@protoc_insertion_point(field_release:szfiu.StockDefine.market)
  
  return market_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StockDefine::set_allocated_market(::std::string* market) {
  if (market != NULL) {
    
  } else {
    
  }
  market_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), market);
  // @@protoc_insertion_point(field_set_allocated:szfiu.StockDefine.market)
}

// sint64 time = 4;
inline void StockDefine::clear_time() {
  time_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 StockDefine::time() const {
  // @@protoc_insertion_point(field_get:szfiu.StockDefine.time)
  return time_;
}
inline void StockDefine::set_time(::google::protobuf::int64 value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:szfiu.StockDefine.time)
}

// string financial = 5;
inline void StockDefine::clear_financial() {
  financial_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StockDefine::financial() const {
  // @@protoc_insertion_point(field_get:szfiu.StockDefine.financial)
  return financial_.GetNoArena();
}
inline void StockDefine::set_financial(const ::std::string& value) {
  
  financial_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:szfiu.StockDefine.financial)
}
#if LANG_CXX11
inline void StockDefine::set_financial(::std::string&& value) {
  
  financial_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:szfiu.StockDefine.financial)
}
#endif
inline void StockDefine::set_financial(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  financial_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:szfiu.StockDefine.financial)
}
inline void StockDefine::set_financial(const char* value, size_t size) {
  
  financial_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:szfiu.StockDefine.financial)
}
inline ::std::string* StockDefine::mutable_financial() {
  
  // @@protoc_insertion_point(field_mutable:szfiu.StockDefine.financial)
  return financial_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StockDefine::release_financial() {
  // @@protoc_insertion_point(field_release:szfiu.StockDefine.financial)
  
  return financial_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StockDefine::set_allocated_financial(::std::string* financial) {
  if (financial != NULL) {
    
  } else {
    
  }
  financial_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), financial);
  // @@protoc_insertion_point(field_set_allocated:szfiu.StockDefine.financial)
}

// int32 roundlotsize = 6;
inline void StockDefine::clear_roundlotsize() {
  roundlotsize_ = 0;
}
inline ::google::protobuf::int32 StockDefine::roundlotsize() const {
  // @@protoc_insertion_point(field_get:szfiu.StockDefine.roundlotsize)
  return roundlotsize_;
}
inline void StockDefine::set_roundlotsize(::google::protobuf::int32 value) {
  
  roundlotsize_ = value;
  // @@protoc_insertion_point(field_set:szfiu.StockDefine.roundlotsize)
}

// string roundlotonly = 7;
inline void StockDefine::clear_roundlotonly() {
  roundlotonly_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StockDefine::roundlotonly() const {
  // @@protoc_insertion_point(field_get:szfiu.StockDefine.roundlotonly)
  return roundlotonly_.GetNoArena();
}
inline void StockDefine::set_roundlotonly(const ::std::string& value) {
  
  roundlotonly_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:szfiu.StockDefine.roundlotonly)
}
#if LANG_CXX11
inline void StockDefine::set_roundlotonly(::std::string&& value) {
  
  roundlotonly_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:szfiu.StockDefine.roundlotonly)
}
#endif
inline void StockDefine::set_roundlotonly(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  roundlotonly_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:szfiu.StockDefine.roundlotonly)
}
inline void StockDefine::set_roundlotonly(const char* value, size_t size) {
  
  roundlotonly_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:szfiu.StockDefine.roundlotonly)
}
inline ::std::string* StockDefine::mutable_roundlotonly() {
  
  // @@protoc_insertion_point(field_mutable:szfiu.StockDefine.roundlotonly)
  return roundlotonly_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StockDefine::release_roundlotonly() {
  // @@protoc_insertion_point(field_release:szfiu.StockDefine.roundlotonly)
  
  return roundlotonly_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StockDefine::set_allocated_roundlotonly(::std::string* roundlotonly) {
  if (roundlotonly != NULL) {
    
  } else {
    
  }
  roundlotonly_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), roundlotonly);
  // @@protoc_insertion_point(field_set_allocated:szfiu.StockDefine.roundlotonly)
}

// string classification = 8;
inline void StockDefine::clear_classification() {
  classification_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StockDefine::classification() const {
  // @@protoc_insertion_point(field_get:szfiu.StockDefine.classification)
  return classification_.GetNoArena();
}
inline void StockDefine::set_classification(const ::std::string& value) {
  
  classification_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:szfiu.StockDefine.classification)
}
#if LANG_CXX11
inline void StockDefine::set_classification(::std::string&& value) {
  
  classification_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:szfiu.StockDefine.classification)
}
#endif
inline void StockDefine::set_classification(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  classification_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:szfiu.StockDefine.classification)
}
inline void StockDefine::set_classification(const char* value, size_t size) {
  
  classification_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:szfiu.StockDefine.classification)
}
inline ::std::string* StockDefine::mutable_classification() {
  
  // @@protoc_insertion_point(field_mutable:szfiu.StockDefine.classification)
  return classification_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StockDefine::release_classification() {
  // @@protoc_insertion_point(field_release:szfiu.StockDefine.classification)
  
  return classification_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StockDefine::set_allocated_classification(::std::string* classification) {
  if (classification != NULL) {
    
  } else {
    
  }
  classification_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), classification);
  // @@protoc_insertion_point(field_set_allocated:szfiu.StockDefine.classification)
}

// string subtype = 9;
inline void StockDefine::clear_subtype() {
  subtype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StockDefine::subtype() const {
  // @@protoc_insertion_point(field_get:szfiu.StockDefine.subtype)
  return subtype_.GetNoArena();
}
inline void StockDefine::set_subtype(const ::std::string& value) {
  
  subtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:szfiu.StockDefine.subtype)
}
#if LANG_CXX11
inline void StockDefine::set_subtype(::std::string&& value) {
  
  subtype_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:szfiu.StockDefine.subtype)
}
#endif
inline void StockDefine::set_subtype(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  subtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:szfiu.StockDefine.subtype)
}
inline void StockDefine::set_subtype(const char* value, size_t size) {
  
  subtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:szfiu.StockDefine.subtype)
}
inline ::std::string* StockDefine::mutable_subtype() {
  
  // @@protoc_insertion_point(field_mutable:szfiu.StockDefine.subtype)
  return subtype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StockDefine::release_subtype() {
  // @@protoc_insertion_point(field_release:szfiu.StockDefine.subtype)
  
  return subtype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StockDefine::set_allocated_subtype(::std::string* subtype) {
  if (subtype != NULL) {
    
  } else {
    
  }
  subtype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), subtype);
  // @@protoc_insertion_point(field_set_allocated:szfiu.StockDefine.subtype)
}

// string authenticity = 10;
inline void StockDefine::clear_authenticity() {
  authenticity_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StockDefine::authenticity() const {
  // @@protoc_insertion_point(field_get:szfiu.StockDefine.authenticity)
  return authenticity_.GetNoArena();
}
inline void StockDefine::set_authenticity(const ::std::string& value) {
  
  authenticity_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:szfiu.StockDefine.authenticity)
}
#if LANG_CXX11
inline void StockDefine::set_authenticity(::std::string&& value) {
  
  authenticity_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:szfiu.StockDefine.authenticity)
}
#endif
inline void StockDefine::set_authenticity(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  authenticity_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:szfiu.StockDefine.authenticity)
}
inline void StockDefine::set_authenticity(const char* value, size_t size) {
  
  authenticity_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:szfiu.StockDefine.authenticity)
}
inline ::std::string* StockDefine::mutable_authenticity() {
  
  // @@protoc_insertion_point(field_mutable:szfiu.StockDefine.authenticity)
  return authenticity_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StockDefine::release_authenticity() {
  // @@protoc_insertion_point(field_release:szfiu.StockDefine.authenticity)
  
  return authenticity_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StockDefine::set_allocated_authenticity(::std::string* authenticity) {
  if (authenticity != NULL) {
    
  } else {
    
  }
  authenticity_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), authenticity);
  // @@protoc_insertion_point(field_set_allocated:szfiu.StockDefine.authenticity)
}

// string shortsale = 11;
inline void StockDefine::clear_shortsale() {
  shortsale_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StockDefine::shortsale() const {
  // @@protoc_insertion_point(field_get:szfiu.StockDefine.shortsale)
  return shortsale_.GetNoArena();
}
inline void StockDefine::set_shortsale(const ::std::string& value) {
  
  shortsale_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:szfiu.StockDefine.shortsale)
}
#if LANG_CXX11
inline void StockDefine::set_shortsale(::std::string&& value) {
  
  shortsale_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:szfiu.StockDefine.shortsale)
}
#endif
inline void StockDefine::set_shortsale(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  shortsale_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:szfiu.StockDefine.shortsale)
}
inline void StockDefine::set_shortsale(const char* value, size_t size) {
  
  shortsale_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:szfiu.StockDefine.shortsale)
}
inline ::std::string* StockDefine::mutable_shortsale() {
  
  // @@protoc_insertion_point(field_mutable:szfiu.StockDefine.shortsale)
  return shortsale_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StockDefine::release_shortsale() {
  // @@protoc_insertion_point(field_release:szfiu.StockDefine.shortsale)
  
  return shortsale_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StockDefine::set_allocated_shortsale(::std::string* shortsale) {
  if (shortsale != NULL) {
    
  } else {
    
  }
  shortsale_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), shortsale);
  // @@protoc_insertion_point(field_set_allocated:szfiu.StockDefine.shortsale)
}

// string ipo = 12;
inline void StockDefine::clear_ipo() {
  ipo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StockDefine::ipo() const {
  // @@protoc_insertion_point(field_get:szfiu.StockDefine.ipo)
  return ipo_.GetNoArena();
}
inline void StockDefine::set_ipo(const ::std::string& value) {
  
  ipo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:szfiu.StockDefine.ipo)
}
#if LANG_CXX11
inline void StockDefine::set_ipo(::std::string&& value) {
  
  ipo_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:szfiu.StockDefine.ipo)
}
#endif
inline void StockDefine::set_ipo(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ipo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:szfiu.StockDefine.ipo)
}
inline void StockDefine::set_ipo(const char* value, size_t size) {
  
  ipo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:szfiu.StockDefine.ipo)
}
inline ::std::string* StockDefine::mutable_ipo() {
  
  // @@protoc_insertion_point(field_mutable:szfiu.StockDefine.ipo)
  return ipo_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StockDefine::release_ipo() {
  // @@protoc_insertion_point(field_release:szfiu.StockDefine.ipo)
  
  return ipo_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StockDefine::set_allocated_ipo(::std::string* ipo) {
  if (ipo != NULL) {
    
  } else {
    
  }
  ipo_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ipo);
  // @@protoc_insertion_point(field_set_allocated:szfiu.StockDefine.ipo)
}

// string luld = 13;
inline void StockDefine::clear_luld() {
  luld_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StockDefine::luld() const {
  // @@protoc_insertion_point(field_get:szfiu.StockDefine.luld)
  return luld_.GetNoArena();
}
inline void StockDefine::set_luld(const ::std::string& value) {
  
  luld_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:szfiu.StockDefine.luld)
}
#if LANG_CXX11
inline void StockDefine::set_luld(::std::string&& value) {
  
  luld_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:szfiu.StockDefine.luld)
}
#endif
inline void StockDefine::set_luld(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  luld_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:szfiu.StockDefine.luld)
}
inline void StockDefine::set_luld(const char* value, size_t size) {
  
  luld_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:szfiu.StockDefine.luld)
}
inline ::std::string* StockDefine::mutable_luld() {
  
  // @@protoc_insertion_point(field_mutable:szfiu.StockDefine.luld)
  return luld_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StockDefine::release_luld() {
  // @@protoc_insertion_point(field_release:szfiu.StockDefine.luld)
  
  return luld_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StockDefine::set_allocated_luld(::std::string* luld) {
  if (luld != NULL) {
    
  } else {
    
  }
  luld_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), luld);
  // @@protoc_insertion_point(field_set_allocated:szfiu.StockDefine.luld)
}

// string etp = 14;
inline void StockDefine::clear_etp() {
  etp_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StockDefine::etp() const {
  // @@protoc_insertion_point(field_get:szfiu.StockDefine.etp)
  return etp_.GetNoArena();
}
inline void StockDefine::set_etp(const ::std::string& value) {
  
  etp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:szfiu.StockDefine.etp)
}
#if LANG_CXX11
inline void StockDefine::set_etp(::std::string&& value) {
  
  etp_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:szfiu.StockDefine.etp)
}
#endif
inline void StockDefine::set_etp(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  etp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:szfiu.StockDefine.etp)
}
inline void StockDefine::set_etp(const char* value, size_t size) {
  
  etp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:szfiu.StockDefine.etp)
}
inline ::std::string* StockDefine::mutable_etp() {
  
  // @@protoc_insertion_point(field_mutable:szfiu.StockDefine.etp)
  return etp_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StockDefine::release_etp() {
  // @@protoc_insertion_point(field_release:szfiu.StockDefine.etp)
  
  return etp_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StockDefine::set_allocated_etp(::std::string* etp) {
  if (etp != NULL) {
    
  } else {
    
  }
  etp_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), etp);
  // @@protoc_insertion_point(field_set_allocated:szfiu.StockDefine.etp)
}

// int32 etplevel = 15;
inline void StockDefine::clear_etplevel() {
  etplevel_ = 0;
}
inline ::google::protobuf::int32 StockDefine::etplevel() const {
  // @@protoc_insertion_point(field_get:szfiu.StockDefine.etplevel)
  return etplevel_;
}
inline void StockDefine::set_etplevel(::google::protobuf::int32 value) {
  
  etplevel_ = value;
  // @@protoc_insertion_point(field_set:szfiu.StockDefine.etplevel)
}

// string inverse = 16;
inline void StockDefine::clear_inverse() {
  inverse_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StockDefine::inverse() const {
  // @@protoc_insertion_point(field_get:szfiu.StockDefine.inverse)
  return inverse_.GetNoArena();
}
inline void StockDefine::set_inverse(const ::std::string& value) {
  
  inverse_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:szfiu.StockDefine.inverse)
}
#if LANG_CXX11
inline void StockDefine::set_inverse(::std::string&& value) {
  
  inverse_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:szfiu.StockDefine.inverse)
}
#endif
inline void StockDefine::set_inverse(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  inverse_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:szfiu.StockDefine.inverse)
}
inline void StockDefine::set_inverse(const char* value, size_t size) {
  
  inverse_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:szfiu.StockDefine.inverse)
}
inline ::std::string* StockDefine::mutable_inverse() {
  
  // @@protoc_insertion_point(field_mutable:szfiu.StockDefine.inverse)
  return inverse_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StockDefine::release_inverse() {
  // @@protoc_insertion_point(field_release:szfiu.StockDefine.inverse)
  
  return inverse_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StockDefine::set_allocated_inverse(::std::string* inverse) {
  if (inverse != NULL) {
    
  } else {
    
  }
  inverse_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), inverse);
  // @@protoc_insertion_point(field_set_allocated:szfiu.StockDefine.inverse)
}

// -------------------------------------------------------------------

// SystemEvent

// int32 event = 1;
inline void SystemEvent::clear_event() {
  event_ = 0;
}
inline ::google::protobuf::int32 SystemEvent::event() const {
  // @@protoc_insertion_point(field_get:szfiu.SystemEvent.event)
  return event_;
}
inline void SystemEvent::set_event(::google::protobuf::int32 value) {
  
  event_ = value;
  // @@protoc_insertion_point(field_set:szfiu.SystemEvent.event)
}

// sint64 time = 2;
inline void SystemEvent::clear_time() {
  time_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 SystemEvent::time() const {
  // @@protoc_insertion_point(field_get:szfiu.SystemEvent.time)
  return time_;
}
inline void SystemEvent::set_time(::google::protobuf::int64 value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:szfiu.SystemEvent.time)
}

// -------------------------------------------------------------------

// CrossTrade

// string symbol = 1;
inline void CrossTrade::clear_symbol() {
  symbol_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CrossTrade::symbol() const {
  // @@protoc_insertion_point(field_get:szfiu.CrossTrade.symbol)
  return symbol_.GetNoArena();
}
inline void CrossTrade::set_symbol(const ::std::string& value) {
  
  symbol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:szfiu.CrossTrade.symbol)
}
#if LANG_CXX11
inline void CrossTrade::set_symbol(::std::string&& value) {
  
  symbol_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:szfiu.CrossTrade.symbol)
}
#endif
inline void CrossTrade::set_symbol(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  symbol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:szfiu.CrossTrade.symbol)
}
inline void CrossTrade::set_symbol(const char* value, size_t size) {
  
  symbol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:szfiu.CrossTrade.symbol)
}
inline ::std::string* CrossTrade::mutable_symbol() {
  
  // @@protoc_insertion_point(field_mutable:szfiu.CrossTrade.symbol)
  return symbol_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CrossTrade::release_symbol() {
  // @@protoc_insertion_point(field_release:szfiu.CrossTrade.symbol)
  
  return symbol_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CrossTrade::set_allocated_symbol(::std::string* symbol) {
  if (symbol != NULL) {
    
  } else {
    
  }
  symbol_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), symbol);
  // @@protoc_insertion_point(field_set_allocated:szfiu.CrossTrade.symbol)
}

// sint64 time = 2;
inline void CrossTrade::clear_time() {
  time_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 CrossTrade::time() const {
  // @@protoc_insertion_point(field_get:szfiu.CrossTrade.time)
  return time_;
}
inline void CrossTrade::set_time(::google::protobuf::int64 value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:szfiu.CrossTrade.time)
}

// int64 price = 3;
inline void CrossTrade::clear_price() {
  price_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 CrossTrade::price() const {
  // @@protoc_insertion_point(field_get:szfiu.CrossTrade.price)
  return price_;
}
inline void CrossTrade::set_price(::google::protobuf::int64 value) {
  
  price_ = value;
  // @@protoc_insertion_point(field_set:szfiu.CrossTrade.price)
}

// int64 shares = 4;
inline void CrossTrade::clear_shares() {
  shares_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 CrossTrade::shares() const {
  // @@protoc_insertion_point(field_get:szfiu.CrossTrade.shares)
  return shares_;
}
inline void CrossTrade::set_shares(::google::protobuf::int64 value) {
  
  shares_ = value;
  // @@protoc_insertion_point(field_set:szfiu.CrossTrade.shares)
}

// int32 type = 5;
inline void CrossTrade::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 CrossTrade::type() const {
  // @@protoc_insertion_point(field_get:szfiu.CrossTrade.type)
  return type_;
}
inline void CrossTrade::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:szfiu.CrossTrade.type)
}

// int64 code = 6;
inline void CrossTrade::clear_code() {
  code_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 CrossTrade::code() const {
  // @@protoc_insertion_point(field_get:szfiu.CrossTrade.code)
  return code_;
}
inline void CrossTrade::set_code(::google::protobuf::int64 value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:szfiu.CrossTrade.code)
}

// -------------------------------------------------------------------

// OrderItem

// int64 price = 1;
inline void OrderItem::clear_price() {
  price_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 OrderItem::price() const {
  // @@protoc_insertion_point(field_get:szfiu.OrderItem.price)
  return price_;
}
inline void OrderItem::set_price(::google::protobuf::int64 value) {
  
  price_ = value;
  // @@protoc_insertion_point(field_set:szfiu.OrderItem.price)
}

// int32 qty = 2;
inline void OrderItem::clear_qty() {
  qty_ = 0;
}
inline ::google::protobuf::int32 OrderItem::qty() const {
  // @@protoc_insertion_point(field_get:szfiu.OrderItem.qty)
  return qty_;
}
inline void OrderItem::set_qty(::google::protobuf::int32 value) {
  
  qty_ = value;
  // @@protoc_insertion_point(field_set:szfiu.OrderItem.qty)
}

// string mpid = 3;
inline void OrderItem::clear_mpid() {
  mpid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OrderItem::mpid() const {
  // @@protoc_insertion_point(field_get:szfiu.OrderItem.mpid)
  return mpid_.GetNoArena();
}
inline void OrderItem::set_mpid(const ::std::string& value) {
  
  mpid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:szfiu.OrderItem.mpid)
}
#if LANG_CXX11
inline void OrderItem::set_mpid(::std::string&& value) {
  
  mpid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:szfiu.OrderItem.mpid)
}
#endif
inline void OrderItem::set_mpid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  mpid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:szfiu.OrderItem.mpid)
}
inline void OrderItem::set_mpid(const char* value, size_t size) {
  
  mpid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:szfiu.OrderItem.mpid)
}
inline ::std::string* OrderItem::mutable_mpid() {
  
  // @@protoc_insertion_point(field_mutable:szfiu.OrderItem.mpid)
  return mpid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OrderItem::release_mpid() {
  // @@protoc_insertion_point(field_release:szfiu.OrderItem.mpid)
  
  return mpid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OrderItem::set_allocated_mpid(::std::string* mpid) {
  if (mpid != NULL) {
    
  } else {
    
  }
  mpid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mpid);
  // @@protoc_insertion_point(field_set_allocated:szfiu.OrderItem.mpid)
}

// -------------------------------------------------------------------

// OrderList

// string symbol = 1;
inline void OrderList::clear_symbol() {
  symbol_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OrderList::symbol() const {
  // @@protoc_insertion_point(field_get:szfiu.OrderList.symbol)
  return symbol_.GetNoArena();
}
inline void OrderList::set_symbol(const ::std::string& value) {
  
  symbol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:szfiu.OrderList.symbol)
}
#if LANG_CXX11
inline void OrderList::set_symbol(::std::string&& value) {
  
  symbol_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:szfiu.OrderList.symbol)
}
#endif
inline void OrderList::set_symbol(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  symbol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:szfiu.OrderList.symbol)
}
inline void OrderList::set_symbol(const char* value, size_t size) {
  
  symbol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:szfiu.OrderList.symbol)
}
inline ::std::string* OrderList::mutable_symbol() {
  
  // @@protoc_insertion_point(field_mutable:szfiu.OrderList.symbol)
  return symbol_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OrderList::release_symbol() {
  // @@protoc_insertion_point(field_release:szfiu.OrderList.symbol)
  
  return symbol_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OrderList::set_allocated_symbol(::std::string* symbol) {
  if (symbol != NULL) {
    
  } else {
    
  }
  symbol_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), symbol);
  // @@protoc_insertion_point(field_set_allocated:szfiu.OrderList.symbol)
}

// sint64 time = 2;
inline void OrderList::clear_time() {
  time_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 OrderList::time() const {
  // @@protoc_insertion_point(field_get:szfiu.OrderList.time)
  return time_;
}
inline void OrderList::set_time(::google::protobuf::int64 value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:szfiu.OrderList.time)
}

// repeated .szfiu.OrderItem bidlist = 3;
inline int OrderList::bidlist_size() const {
  return bidlist_.size();
}
inline void OrderList::clear_bidlist() {
  bidlist_.Clear();
}
inline ::szfiu::OrderItem* OrderList::mutable_bidlist(int index) {
  // @@protoc_insertion_point(field_mutable:szfiu.OrderList.bidlist)
  return bidlist_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::szfiu::OrderItem >*
OrderList::mutable_bidlist() {
  // @@protoc_insertion_point(field_mutable_list:szfiu.OrderList.bidlist)
  return &bidlist_;
}
inline const ::szfiu::OrderItem& OrderList::bidlist(int index) const {
  // @@protoc_insertion_point(field_get:szfiu.OrderList.bidlist)
  return bidlist_.Get(index);
}
inline ::szfiu::OrderItem* OrderList::add_bidlist() {
  // @@protoc_insertion_point(field_add:szfiu.OrderList.bidlist)
  return bidlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::szfiu::OrderItem >&
OrderList::bidlist() const {
  // @@protoc_insertion_point(field_list:szfiu.OrderList.bidlist)
  return bidlist_;
}

// repeated .szfiu.OrderItem asklist = 4;
inline int OrderList::asklist_size() const {
  return asklist_.size();
}
inline void OrderList::clear_asklist() {
  asklist_.Clear();
}
inline ::szfiu::OrderItem* OrderList::mutable_asklist(int index) {
  // @@protoc_insertion_point(field_mutable:szfiu.OrderList.asklist)
  return asklist_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::szfiu::OrderItem >*
OrderList::mutable_asklist() {
  // @@protoc_insertion_point(field_mutable_list:szfiu.OrderList.asklist)
  return &asklist_;
}
inline const ::szfiu::OrderItem& OrderList::asklist(int index) const {
  // @@protoc_insertion_point(field_get:szfiu.OrderList.asklist)
  return asklist_.Get(index);
}
inline ::szfiu::OrderItem* OrderList::add_asklist() {
  // @@protoc_insertion_point(field_add:szfiu.OrderList.asklist)
  return asklist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::szfiu::OrderItem >&
OrderList::asklist() const {
  // @@protoc_insertion_point(field_list:szfiu.OrderList.asklist)
  return asklist_;
}

// int64 code = 5;
inline void OrderList::clear_code() {
  code_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 OrderList::code() const {
  // @@protoc_insertion_point(field_get:szfiu.OrderList.code)
  return code_;
}
inline void OrderList::set_code(::google::protobuf::int64 value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:szfiu.OrderList.code)
}

// -------------------------------------------------------------------

// LevelList

// string symbol = 1;
inline void LevelList::clear_symbol() {
  symbol_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LevelList::symbol() const {
  // @@protoc_insertion_point(field_get:szfiu.LevelList.symbol)
  return symbol_.GetNoArena();
}
inline void LevelList::set_symbol(const ::std::string& value) {
  
  symbol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:szfiu.LevelList.symbol)
}
#if LANG_CXX11
inline void LevelList::set_symbol(::std::string&& value) {
  
  symbol_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:szfiu.LevelList.symbol)
}
#endif
inline void LevelList::set_symbol(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  symbol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:szfiu.LevelList.symbol)
}
inline void LevelList::set_symbol(const char* value, size_t size) {
  
  symbol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:szfiu.LevelList.symbol)
}
inline ::std::string* LevelList::mutable_symbol() {
  
  // @@protoc_insertion_point(field_mutable:szfiu.LevelList.symbol)
  return symbol_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LevelList::release_symbol() {
  // @@protoc_insertion_point(field_release:szfiu.LevelList.symbol)
  
  return symbol_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LevelList::set_allocated_symbol(::std::string* symbol) {
  if (symbol != NULL) {
    
  } else {
    
  }
  symbol_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), symbol);
  // @@protoc_insertion_point(field_set_allocated:szfiu.LevelList.symbol)
}

// sint64 time = 2;
inline void LevelList::clear_time() {
  time_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 LevelList::time() const {
  // @@protoc_insertion_point(field_get:szfiu.LevelList.time)
  return time_;
}
inline void LevelList::set_time(::google::protobuf::int64 value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:szfiu.LevelList.time)
}

// repeated .szfiu.OrderItem bidlist = 3;
inline int LevelList::bidlist_size() const {
  return bidlist_.size();
}
inline void LevelList::clear_bidlist() {
  bidlist_.Clear();
}
inline ::szfiu::OrderItem* LevelList::mutable_bidlist(int index) {
  // @@protoc_insertion_point(field_mutable:szfiu.LevelList.bidlist)
  return bidlist_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::szfiu::OrderItem >*
LevelList::mutable_bidlist() {
  // @@protoc_insertion_point(field_mutable_list:szfiu.LevelList.bidlist)
  return &bidlist_;
}
inline const ::szfiu::OrderItem& LevelList::bidlist(int index) const {
  // @@protoc_insertion_point(field_get:szfiu.LevelList.bidlist)
  return bidlist_.Get(index);
}
inline ::szfiu::OrderItem* LevelList::add_bidlist() {
  // @@protoc_insertion_point(field_add:szfiu.LevelList.bidlist)
  return bidlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::szfiu::OrderItem >&
LevelList::bidlist() const {
  // @@protoc_insertion_point(field_list:szfiu.LevelList.bidlist)
  return bidlist_;
}

// repeated .szfiu.OrderItem asklist = 4;
inline int LevelList::asklist_size() const {
  return asklist_.size();
}
inline void LevelList::clear_asklist() {
  asklist_.Clear();
}
inline ::szfiu::OrderItem* LevelList::mutable_asklist(int index) {
  // @@protoc_insertion_point(field_mutable:szfiu.LevelList.asklist)
  return asklist_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::szfiu::OrderItem >*
LevelList::mutable_asklist() {
  // @@protoc_insertion_point(field_mutable_list:szfiu.LevelList.asklist)
  return &asklist_;
}
inline const ::szfiu::OrderItem& LevelList::asklist(int index) const {
  // @@protoc_insertion_point(field_get:szfiu.LevelList.asklist)
  return asklist_.Get(index);
}
inline ::szfiu::OrderItem* LevelList::add_asklist() {
  // @@protoc_insertion_point(field_add:szfiu.LevelList.asklist)
  return asklist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::szfiu::OrderItem >&
LevelList::asklist() const {
  // @@protoc_insertion_point(field_list:szfiu.LevelList.asklist)
  return asklist_;
}

// int64 code = 5;
inline void LevelList::clear_code() {
  code_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 LevelList::code() const {
  // @@protoc_insertion_point(field_get:szfiu.LevelList.code)
  return code_;
}
inline void LevelList::set_code(::google::protobuf::int64 value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:szfiu.LevelList.code)
}

// -------------------------------------------------------------------

// OrderImbalance

// string symbol = 1;
inline void OrderImbalance::clear_symbol() {
  symbol_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OrderImbalance::symbol() const {
  // @@protoc_insertion_point(field_get:szfiu.OrderImbalance.symbol)
  return symbol_.GetNoArena();
}
inline void OrderImbalance::set_symbol(const ::std::string& value) {
  
  symbol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:szfiu.OrderImbalance.symbol)
}
#if LANG_CXX11
inline void OrderImbalance::set_symbol(::std::string&& value) {
  
  symbol_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:szfiu.OrderImbalance.symbol)
}
#endif
inline void OrderImbalance::set_symbol(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  symbol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:szfiu.OrderImbalance.symbol)
}
inline void OrderImbalance::set_symbol(const char* value, size_t size) {
  
  symbol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:szfiu.OrderImbalance.symbol)
}
inline ::std::string* OrderImbalance::mutable_symbol() {
  
  // @@protoc_insertion_point(field_mutable:szfiu.OrderImbalance.symbol)
  return symbol_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OrderImbalance::release_symbol() {
  // @@protoc_insertion_point(field_release:szfiu.OrderImbalance.symbol)
  
  return symbol_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OrderImbalance::set_allocated_symbol(::std::string* symbol) {
  if (symbol != NULL) {
    
  } else {
    
  }
  symbol_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), symbol);
  // @@protoc_insertion_point(field_set_allocated:szfiu.OrderImbalance.symbol)
}

// sint64 time = 2;
inline void OrderImbalance::clear_time() {
  time_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 OrderImbalance::time() const {
  // @@protoc_insertion_point(field_get:szfiu.OrderImbalance.time)
  return time_;
}
inline void OrderImbalance::set_time(::google::protobuf::int64 value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:szfiu.OrderImbalance.time)
}

// int64 paried_shares = 3;
inline void OrderImbalance::clear_paried_shares() {
  paried_shares_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 OrderImbalance::paried_shares() const {
  // @@protoc_insertion_point(field_get:szfiu.OrderImbalance.paried_shares)
  return paried_shares_;
}
inline void OrderImbalance::set_paried_shares(::google::protobuf::int64 value) {
  
  paried_shares_ = value;
  // @@protoc_insertion_point(field_set:szfiu.OrderImbalance.paried_shares)
}

// int64 imbalance = 4;
inline void OrderImbalance::clear_imbalance() {
  imbalance_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 OrderImbalance::imbalance() const {
  // @@protoc_insertion_point(field_get:szfiu.OrderImbalance.imbalance)
  return imbalance_;
}
inline void OrderImbalance::set_imbalance(::google::protobuf::int64 value) {
  
  imbalance_ = value;
  // @@protoc_insertion_point(field_set:szfiu.OrderImbalance.imbalance)
}

// string dir = 5;
inline void OrderImbalance::clear_dir() {
  dir_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OrderImbalance::dir() const {
  // @@protoc_insertion_point(field_get:szfiu.OrderImbalance.dir)
  return dir_.GetNoArena();
}
inline void OrderImbalance::set_dir(const ::std::string& value) {
  
  dir_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:szfiu.OrderImbalance.dir)
}
#if LANG_CXX11
inline void OrderImbalance::set_dir(::std::string&& value) {
  
  dir_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:szfiu.OrderImbalance.dir)
}
#endif
inline void OrderImbalance::set_dir(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  dir_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:szfiu.OrderImbalance.dir)
}
inline void OrderImbalance::set_dir(const char* value, size_t size) {
  
  dir_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:szfiu.OrderImbalance.dir)
}
inline ::std::string* OrderImbalance::mutable_dir() {
  
  // @@protoc_insertion_point(field_mutable:szfiu.OrderImbalance.dir)
  return dir_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OrderImbalance::release_dir() {
  // @@protoc_insertion_point(field_release:szfiu.OrderImbalance.dir)
  
  return dir_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OrderImbalance::set_allocated_dir(::std::string* dir) {
  if (dir != NULL) {
    
  } else {
    
  }
  dir_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dir);
  // @@protoc_insertion_point(field_set_allocated:szfiu.OrderImbalance.dir)
}

// int32 far_price = 6;
inline void OrderImbalance::clear_far_price() {
  far_price_ = 0;
}
inline ::google::protobuf::int32 OrderImbalance::far_price() const {
  // @@protoc_insertion_point(field_get:szfiu.OrderImbalance.far_price)
  return far_price_;
}
inline void OrderImbalance::set_far_price(::google::protobuf::int32 value) {
  
  far_price_ = value;
  // @@protoc_insertion_point(field_set:szfiu.OrderImbalance.far_price)
}

// int32 near_price = 7;
inline void OrderImbalance::clear_near_price() {
  near_price_ = 0;
}
inline ::google::protobuf::int32 OrderImbalance::near_price() const {
  // @@protoc_insertion_point(field_get:szfiu.OrderImbalance.near_price)
  return near_price_;
}
inline void OrderImbalance::set_near_price(::google::protobuf::int32 value) {
  
  near_price_ = value;
  // @@protoc_insertion_point(field_set:szfiu.OrderImbalance.near_price)
}

// int32 ref_price = 8;
inline void OrderImbalance::clear_ref_price() {
  ref_price_ = 0;
}
inline ::google::protobuf::int32 OrderImbalance::ref_price() const {
  // @@protoc_insertion_point(field_get:szfiu.OrderImbalance.ref_price)
  return ref_price_;
}
inline void OrderImbalance::set_ref_price(::google::protobuf::int32 value) {
  
  ref_price_ = value;
  // @@protoc_insertion_point(field_set:szfiu.OrderImbalance.ref_price)
}

// string cross_type = 9;
inline void OrderImbalance::clear_cross_type() {
  cross_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OrderImbalance::cross_type() const {
  // @@protoc_insertion_point(field_get:szfiu.OrderImbalance.cross_type)
  return cross_type_.GetNoArena();
}
inline void OrderImbalance::set_cross_type(const ::std::string& value) {
  
  cross_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:szfiu.OrderImbalance.cross_type)
}
#if LANG_CXX11
inline void OrderImbalance::set_cross_type(::std::string&& value) {
  
  cross_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:szfiu.OrderImbalance.cross_type)
}
#endif
inline void OrderImbalance::set_cross_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  cross_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:szfiu.OrderImbalance.cross_type)
}
inline void OrderImbalance::set_cross_type(const char* value, size_t size) {
  
  cross_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:szfiu.OrderImbalance.cross_type)
}
inline ::std::string* OrderImbalance::mutable_cross_type() {
  
  // @@protoc_insertion_point(field_mutable:szfiu.OrderImbalance.cross_type)
  return cross_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OrderImbalance::release_cross_type() {
  // @@protoc_insertion_point(field_release:szfiu.OrderImbalance.cross_type)
  
  return cross_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OrderImbalance::set_allocated_cross_type(::std::string* cross_type) {
  if (cross_type != NULL) {
    
  } else {
    
  }
  cross_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cross_type);
  // @@protoc_insertion_point(field_set_allocated:szfiu.OrderImbalance.cross_type)
}

// string varitation = 10;
inline void OrderImbalance::clear_varitation() {
  varitation_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OrderImbalance::varitation() const {
  // @@protoc_insertion_point(field_get:szfiu.OrderImbalance.varitation)
  return varitation_.GetNoArena();
}
inline void OrderImbalance::set_varitation(const ::std::string& value) {
  
  varitation_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:szfiu.OrderImbalance.varitation)
}
#if LANG_CXX11
inline void OrderImbalance::set_varitation(::std::string&& value) {
  
  varitation_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:szfiu.OrderImbalance.varitation)
}
#endif
inline void OrderImbalance::set_varitation(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  varitation_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:szfiu.OrderImbalance.varitation)
}
inline void OrderImbalance::set_varitation(const char* value, size_t size) {
  
  varitation_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:szfiu.OrderImbalance.varitation)
}
inline ::std::string* OrderImbalance::mutable_varitation() {
  
  // @@protoc_insertion_point(field_mutable:szfiu.OrderImbalance.varitation)
  return varitation_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OrderImbalance::release_varitation() {
  // @@protoc_insertion_point(field_release:szfiu.OrderImbalance.varitation)
  
  return varitation_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OrderImbalance::set_allocated_varitation(::std::string* varitation) {
  if (varitation != NULL) {
    
  } else {
    
  }
  varitation_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), varitation);
  // @@protoc_insertion_point(field_set_allocated:szfiu.OrderImbalance.varitation)
}

// int64 code = 11;
inline void OrderImbalance::clear_code() {
  code_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 OrderImbalance::code() const {
  // @@protoc_insertion_point(field_get:szfiu.OrderImbalance.code)
  return code_;
}
inline void OrderImbalance::set_code(::google::protobuf::int64 value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:szfiu.OrderImbalance.code)
}

// -------------------------------------------------------------------

// MoneyFlow

// string symbol = 1;
inline void MoneyFlow::clear_symbol() {
  symbol_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MoneyFlow::symbol() const {
  // @@protoc_insertion_point(field_get:szfiu.MoneyFlow.symbol)
  return symbol_.GetNoArena();
}
inline void MoneyFlow::set_symbol(const ::std::string& value) {
  
  symbol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:szfiu.MoneyFlow.symbol)
}
#if LANG_CXX11
inline void MoneyFlow::set_symbol(::std::string&& value) {
  
  symbol_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:szfiu.MoneyFlow.symbol)
}
#endif
inline void MoneyFlow::set_symbol(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  symbol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:szfiu.MoneyFlow.symbol)
}
inline void MoneyFlow::set_symbol(const char* value, size_t size) {
  
  symbol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:szfiu.MoneyFlow.symbol)
}
inline ::std::string* MoneyFlow::mutable_symbol() {
  
  // @@protoc_insertion_point(field_mutable:szfiu.MoneyFlow.symbol)
  return symbol_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MoneyFlow::release_symbol() {
  // @@protoc_insertion_point(field_release:szfiu.MoneyFlow.symbol)
  
  return symbol_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MoneyFlow::set_allocated_symbol(::std::string* symbol) {
  if (symbol != NULL) {
    
  } else {
    
  }
  symbol_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), symbol);
  // @@protoc_insertion_point(field_set_allocated:szfiu.MoneyFlow.symbol)
}

// sint64 time = 2;
inline void MoneyFlow::clear_time() {
  time_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 MoneyFlow::time() const {
  // @@protoc_insertion_point(field_get:szfiu.MoneyFlow.time)
  return time_;
}
inline void MoneyFlow::set_time(::google::protobuf::int64 value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:szfiu.MoneyFlow.time)
}

// int64 price = 3;
inline void MoneyFlow::clear_price() {
  price_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 MoneyFlow::price() const {
  // @@protoc_insertion_point(field_get:szfiu.MoneyFlow.price)
  return price_;
}
inline void MoneyFlow::set_price(::google::protobuf::int64 value) {
  
  price_ = value;
  // @@protoc_insertion_point(field_set:szfiu.MoneyFlow.price)
}

// int64 qty = 4;
inline void MoneyFlow::clear_qty() {
  qty_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 MoneyFlow::qty() const {
  // @@protoc_insertion_point(field_get:szfiu.MoneyFlow.qty)
  return qty_;
}
inline void MoneyFlow::set_qty(::google::protobuf::int64 value) {
  
  qty_ = value;
  // @@protoc_insertion_point(field_set:szfiu.MoneyFlow.qty)
}

// string dir = 5;
inline void MoneyFlow::clear_dir() {
  dir_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MoneyFlow::dir() const {
  // @@protoc_insertion_point(field_get:szfiu.MoneyFlow.dir)
  return dir_.GetNoArena();
}
inline void MoneyFlow::set_dir(const ::std::string& value) {
  
  dir_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:szfiu.MoneyFlow.dir)
}
#if LANG_CXX11
inline void MoneyFlow::set_dir(::std::string&& value) {
  
  dir_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:szfiu.MoneyFlow.dir)
}
#endif
inline void MoneyFlow::set_dir(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  dir_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:szfiu.MoneyFlow.dir)
}
inline void MoneyFlow::set_dir(const char* value, size_t size) {
  
  dir_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:szfiu.MoneyFlow.dir)
}
inline ::std::string* MoneyFlow::mutable_dir() {
  
  // @@protoc_insertion_point(field_mutable:szfiu.MoneyFlow.dir)
  return dir_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MoneyFlow::release_dir() {
  // @@protoc_insertion_point(field_release:szfiu.MoneyFlow.dir)
  
  return dir_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MoneyFlow::set_allocated_dir(::std::string* dir) {
  if (dir != NULL) {
    
  } else {
    
  }
  dir_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dir);
  // @@protoc_insertion_point(field_set_allocated:szfiu.MoneyFlow.dir)
}

// -------------------------------------------------------------------

// AddOrder

// int32 code = 1;
inline void AddOrder::clear_code() {
  code_ = 0;
}
inline ::google::protobuf::int32 AddOrder::code() const {
  // @@protoc_insertion_point(field_get:szfiu.AddOrder.code)
  return code_;
}
inline void AddOrder::set_code(::google::protobuf::int32 value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:szfiu.AddOrder.code)
}

// sint64 time = 2;
inline void AddOrder::clear_time() {
  time_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 AddOrder::time() const {
  // @@protoc_insertion_point(field_get:szfiu.AddOrder.time)
  return time_;
}
inline void AddOrder::set_time(::google::protobuf::int64 value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:szfiu.AddOrder.time)
}

// int64 orderid = 3;
inline void AddOrder::clear_orderid() {
  orderid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 AddOrder::orderid() const {
  // @@protoc_insertion_point(field_get:szfiu.AddOrder.orderid)
  return orderid_;
}
inline void AddOrder::set_orderid(::google::protobuf::int64 value) {
  
  orderid_ = value;
  // @@protoc_insertion_point(field_set:szfiu.AddOrder.orderid)
}

// int32 side = 4;
inline void AddOrder::clear_side() {
  side_ = 0;
}
inline ::google::protobuf::int32 AddOrder::side() const {
  // @@protoc_insertion_point(field_get:szfiu.AddOrder.side)
  return side_;
}
inline void AddOrder::set_side(::google::protobuf::int32 value) {
  
  side_ = value;
  // @@protoc_insertion_point(field_set:szfiu.AddOrder.side)
}

// int32 price = 5;
inline void AddOrder::clear_price() {
  price_ = 0;
}
inline ::google::protobuf::int32 AddOrder::price() const {
  // @@protoc_insertion_point(field_get:szfiu.AddOrder.price)
  return price_;
}
inline void AddOrder::set_price(::google::protobuf::int32 value) {
  
  price_ = value;
  // @@protoc_insertion_point(field_set:szfiu.AddOrder.price)
}

// int32 shares = 6;
inline void AddOrder::clear_shares() {
  shares_ = 0;
}
inline ::google::protobuf::int32 AddOrder::shares() const {
  // @@protoc_insertion_point(field_get:szfiu.AddOrder.shares)
  return shares_;
}
inline void AddOrder::set_shares(::google::protobuf::int32 value) {
  
  shares_ = value;
  // @@protoc_insertion_point(field_set:szfiu.AddOrder.shares)
}

// string attr = 7;
inline void AddOrder::clear_attr() {
  attr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AddOrder::attr() const {
  // @@protoc_insertion_point(field_get:szfiu.AddOrder.attr)
  return attr_.GetNoArena();
}
inline void AddOrder::set_attr(const ::std::string& value) {
  
  attr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:szfiu.AddOrder.attr)
}
#if LANG_CXX11
inline void AddOrder::set_attr(::std::string&& value) {
  
  attr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:szfiu.AddOrder.attr)
}
#endif
inline void AddOrder::set_attr(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  attr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:szfiu.AddOrder.attr)
}
inline void AddOrder::set_attr(const char* value, size_t size) {
  
  attr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:szfiu.AddOrder.attr)
}
inline ::std::string* AddOrder::mutable_attr() {
  
  // @@protoc_insertion_point(field_mutable:szfiu.AddOrder.attr)
  return attr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddOrder::release_attr() {
  // @@protoc_insertion_point(field_release:szfiu.AddOrder.attr)
  
  return attr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddOrder::set_allocated_attr(::std::string* attr) {
  if (attr != NULL) {
    
  } else {
    
  }
  attr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), attr);
  // @@protoc_insertion_point(field_set_allocated:szfiu.AddOrder.attr)
}

// -------------------------------------------------------------------

// OrderExe

// int32 code = 1;
inline void OrderExe::clear_code() {
  code_ = 0;
}
inline ::google::protobuf::int32 OrderExe::code() const {
  // @@protoc_insertion_point(field_get:szfiu.OrderExe.code)
  return code_;
}
inline void OrderExe::set_code(::google::protobuf::int32 value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:szfiu.OrderExe.code)
}

// sint64 time = 2;
inline void OrderExe::clear_time() {
  time_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 OrderExe::time() const {
  // @@protoc_insertion_point(field_get:szfiu.OrderExe.time)
  return time_;
}
inline void OrderExe::set_time(::google::protobuf::int64 value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:szfiu.OrderExe.time)
}

// int64 orderid = 3;
inline void OrderExe::clear_orderid() {
  orderid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 OrderExe::orderid() const {
  // @@protoc_insertion_point(field_get:szfiu.OrderExe.orderid)
  return orderid_;
}
inline void OrderExe::set_orderid(::google::protobuf::int64 value) {
  
  orderid_ = value;
  // @@protoc_insertion_point(field_set:szfiu.OrderExe.orderid)
}

// int32 shares = 4;
inline void OrderExe::clear_shares() {
  shares_ = 0;
}
inline ::google::protobuf::int32 OrderExe::shares() const {
  // @@protoc_insertion_point(field_get:szfiu.OrderExe.shares)
  return shares_;
}
inline void OrderExe::set_shares(::google::protobuf::int32 value) {
  
  shares_ = value;
  // @@protoc_insertion_point(field_set:szfiu.OrderExe.shares)
}

// int64 match_num = 5;
inline void OrderExe::clear_match_num() {
  match_num_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 OrderExe::match_num() const {
  // @@protoc_insertion_point(field_get:szfiu.OrderExe.match_num)
  return match_num_;
}
inline void OrderExe::set_match_num(::google::protobuf::int64 value) {
  
  match_num_ = value;
  // @@protoc_insertion_point(field_set:szfiu.OrderExe.match_num)
}

// int32 print = 6;
inline void OrderExe::clear_print() {
  print_ = 0;
}
inline ::google::protobuf::int32 OrderExe::print() const {
  // @@protoc_insertion_point(field_get:szfiu.OrderExe.print)
  return print_;
}
inline void OrderExe::set_print(::google::protobuf::int32 value) {
  
  print_ = value;
  // @@protoc_insertion_point(field_set:szfiu.OrderExe.print)
}

// int32 price = 7;
inline void OrderExe::clear_price() {
  price_ = 0;
}
inline ::google::protobuf::int32 OrderExe::price() const {
  // @@protoc_insertion_point(field_get:szfiu.OrderExe.price)
  return price_;
}
inline void OrderExe::set_price(::google::protobuf::int32 value) {
  
  price_ = value;
  // @@protoc_insertion_point(field_set:szfiu.OrderExe.price)
}

// -------------------------------------------------------------------

// OrderCancel

// int32 code = 1;
inline void OrderCancel::clear_code() {
  code_ = 0;
}
inline ::google::protobuf::int32 OrderCancel::code() const {
  // @@protoc_insertion_point(field_get:szfiu.OrderCancel.code)
  return code_;
}
inline void OrderCancel::set_code(::google::protobuf::int32 value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:szfiu.OrderCancel.code)
}

// sint64 time = 2;
inline void OrderCancel::clear_time() {
  time_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 OrderCancel::time() const {
  // @@protoc_insertion_point(field_get:szfiu.OrderCancel.time)
  return time_;
}
inline void OrderCancel::set_time(::google::protobuf::int64 value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:szfiu.OrderCancel.time)
}

// int64 orderid = 3;
inline void OrderCancel::clear_orderid() {
  orderid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 OrderCancel::orderid() const {
  // @@protoc_insertion_point(field_get:szfiu.OrderCancel.orderid)
  return orderid_;
}
inline void OrderCancel::set_orderid(::google::protobuf::int64 value) {
  
  orderid_ = value;
  // @@protoc_insertion_point(field_set:szfiu.OrderCancel.orderid)
}

// int32 shares = 4;
inline void OrderCancel::clear_shares() {
  shares_ = 0;
}
inline ::google::protobuf::int32 OrderCancel::shares() const {
  // @@protoc_insertion_point(field_get:szfiu.OrderCancel.shares)
  return shares_;
}
inline void OrderCancel::set_shares(::google::protobuf::int32 value) {
  
  shares_ = value;
  // @@protoc_insertion_point(field_set:szfiu.OrderCancel.shares)
}

// -------------------------------------------------------------------

// OrderDelete

// int32 code = 1;
inline void OrderDelete::clear_code() {
  code_ = 0;
}
inline ::google::protobuf::int32 OrderDelete::code() const {
  // @@protoc_insertion_point(field_get:szfiu.OrderDelete.code)
  return code_;
}
inline void OrderDelete::set_code(::google::protobuf::int32 value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:szfiu.OrderDelete.code)
}

// sint64 time = 2;
inline void OrderDelete::clear_time() {
  time_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 OrderDelete::time() const {
  // @@protoc_insertion_point(field_get:szfiu.OrderDelete.time)
  return time_;
}
inline void OrderDelete::set_time(::google::protobuf::int64 value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:szfiu.OrderDelete.time)
}

// int64 orderid = 3;
inline void OrderDelete::clear_orderid() {
  orderid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 OrderDelete::orderid() const {
  // @@protoc_insertion_point(field_get:szfiu.OrderDelete.orderid)
  return orderid_;
}
inline void OrderDelete::set_orderid(::google::protobuf::int64 value) {
  
  orderid_ = value;
  // @@protoc_insertion_point(field_set:szfiu.OrderDelete.orderid)
}

// -------------------------------------------------------------------

// OrderReplace

// int32 code = 1;
inline void OrderReplace::clear_code() {
  code_ = 0;
}
inline ::google::protobuf::int32 OrderReplace::code() const {
  // @@protoc_insertion_point(field_get:szfiu.OrderReplace.code)
  return code_;
}
inline void OrderReplace::set_code(::google::protobuf::int32 value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:szfiu.OrderReplace.code)
}

// sint64 time = 2;
inline void OrderReplace::clear_time() {
  time_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 OrderReplace::time() const {
  // @@protoc_insertion_point(field_get:szfiu.OrderReplace.time)
  return time_;
}
inline void OrderReplace::set_time(::google::protobuf::int64 value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:szfiu.OrderReplace.time)
}

// int64 orderid = 3;
inline void OrderReplace::clear_orderid() {
  orderid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 OrderReplace::orderid() const {
  // @@protoc_insertion_point(field_get:szfiu.OrderReplace.orderid)
  return orderid_;
}
inline void OrderReplace::set_orderid(::google::protobuf::int64 value) {
  
  orderid_ = value;
  // @@protoc_insertion_point(field_set:szfiu.OrderReplace.orderid)
}

// int64 newid = 4;
inline void OrderReplace::clear_newid() {
  newid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 OrderReplace::newid() const {
  // @@protoc_insertion_point(field_get:szfiu.OrderReplace.newid)
  return newid_;
}
inline void OrderReplace::set_newid(::google::protobuf::int64 value) {
  
  newid_ = value;
  // @@protoc_insertion_point(field_set:szfiu.OrderReplace.newid)
}

// int32 shares = 5;
inline void OrderReplace::clear_shares() {
  shares_ = 0;
}
inline ::google::protobuf::int32 OrderReplace::shares() const {
  // @@protoc_insertion_point(field_get:szfiu.OrderReplace.shares)
  return shares_;
}
inline void OrderReplace::set_shares(::google::protobuf::int32 value) {
  
  shares_ = value;
  // @@protoc_insertion_point(field_set:szfiu.OrderReplace.shares)
}

// int32 price = 6;
inline void OrderReplace::clear_price() {
  price_ = 0;
}
inline ::google::protobuf::int32 OrderReplace::price() const {
  // @@protoc_insertion_point(field_get:szfiu.OrderReplace.price)
  return price_;
}
inline void OrderReplace::set_price(::google::protobuf::int32 value) {
  
  price_ = value;
  // @@protoc_insertion_point(field_set:szfiu.OrderReplace.price)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace szfiu

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_tv_2eproto
